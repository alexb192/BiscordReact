{"ast":null,"code":"'use strict';\n\nconst fs = require('graceful-fs');\n\nconst log = require('npmlog');\n\nfunction list(gyp, args, callback) {\n  var devDir = gyp.devDir;\n  log.verbose('list', 'using node-gyp dir:', devDir);\n  fs.readdir(devDir, onreaddir);\n\n  function onreaddir(err, versions) {\n    if (err && err.code !== 'ENOENT') {\n      return callback(err);\n    }\n\n    if (Array.isArray(versions)) {\n      versions = versions.filter(function (v) {\n        return v !== 'current';\n      });\n    } else {\n      versions = [];\n    }\n\n    callback(null, versions);\n  }\n}\n\nmodule.exports = list;\nmodule.exports.usage = 'Prints a listing of the currently installed node development files';","map":{"version":3,"sources":["/home/n/React/loginpagedemo/frontend/node_modules/node-gyp/lib/list.js"],"names":["fs","require","log","list","gyp","args","callback","devDir","verbose","readdir","onreaddir","err","versions","code","Array","isArray","filter","v","module","exports","usage"],"mappings":"AAAA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,aAAD,CAAlB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,QAAD,CAAnB;;AAEA,SAASE,IAAT,CAAeC,GAAf,EAAoBC,IAApB,EAA0BC,QAA1B,EAAoC;AAClC,MAAIC,MAAM,GAAGH,GAAG,CAACG,MAAjB;AACAL,EAAAA,GAAG,CAACM,OAAJ,CAAY,MAAZ,EAAoB,qBAApB,EAA2CD,MAA3C;AAEAP,EAAAA,EAAE,CAACS,OAAH,CAAWF,MAAX,EAAmBG,SAAnB;;AAEA,WAASA,SAAT,CAAoBC,GAApB,EAAyBC,QAAzB,EAAmC;AACjC,QAAID,GAAG,IAAIA,GAAG,CAACE,IAAJ,KAAa,QAAxB,EAAkC;AAChC,aAAOP,QAAQ,CAACK,GAAD,CAAf;AACD;;AAED,QAAIG,KAAK,CAACC,OAAN,CAAcH,QAAd,CAAJ,EAA6B;AAC3BA,MAAAA,QAAQ,GAAGA,QAAQ,CAACI,MAAT,CAAgB,UAAUC,CAAV,EAAa;AAAE,eAAOA,CAAC,KAAK,SAAb;AAAwB,OAAvD,CAAX;AACD,KAFD,MAEO;AACLL,MAAAA,QAAQ,GAAG,EAAX;AACD;;AACDN,IAAAA,QAAQ,CAAC,IAAD,EAAOM,QAAP,CAAR;AACD;AACF;;AAEDM,MAAM,CAACC,OAAP,GAAiBhB,IAAjB;AACAe,MAAM,CAACC,OAAP,CAAeC,KAAf,GAAuB,oEAAvB","sourcesContent":["'use strict'\n\nconst fs = require('graceful-fs')\nconst log = require('npmlog')\n\nfunction list (gyp, args, callback) {\n  var devDir = gyp.devDir\n  log.verbose('list', 'using node-gyp dir:', devDir)\n\n  fs.readdir(devDir, onreaddir)\n\n  function onreaddir (err, versions) {\n    if (err && err.code !== 'ENOENT') {\n      return callback(err)\n    }\n\n    if (Array.isArray(versions)) {\n      versions = versions.filter(function (v) { return v !== 'current' })\n    } else {\n      versions = []\n    }\n    callback(null, versions)\n  }\n}\n\nmodule.exports = list\nmodule.exports.usage = 'Prints a listing of the currently installed node development files'\n"]},"metadata":{},"sourceType":"script"}