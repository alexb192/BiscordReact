{"ast":null,"code":"'use strict';\n\nvar stringWidth = require('string-width');\n\nmodule.exports = TemplateItem;\n\nfunction isPercent(num) {\n  if (typeof num !== 'string') return false;\n  return num.slice(-1) === '%';\n}\n\nfunction percent(num) {\n  return Number(num.slice(0, -1)) / 100;\n}\n\nfunction TemplateItem(values, outputLength) {\n  this.overallOutputLength = outputLength;\n  this.finished = false;\n  this.type = null;\n  this.value = null;\n  this.length = null;\n  this.maxLength = null;\n  this.minLength = null;\n  this.kerning = null;\n  this.align = 'left';\n  this.padLeft = 0;\n  this.padRight = 0;\n  this.index = null;\n  this.first = null;\n  this.last = null;\n\n  if (typeof values === 'string') {\n    this.value = values;\n  } else {\n    for (var prop in values) this[prop] = values[prop];\n  } // Realize percents\n\n\n  if (isPercent(this.length)) {\n    this.length = Math.round(this.overallOutputLength * percent(this.length));\n  }\n\n  if (isPercent(this.minLength)) {\n    this.minLength = Math.round(this.overallOutputLength * percent(this.minLength));\n  }\n\n  if (isPercent(this.maxLength)) {\n    this.maxLength = Math.round(this.overallOutputLength * percent(this.maxLength));\n  }\n\n  return this;\n}\n\nTemplateItem.prototype = {};\n\nTemplateItem.prototype.getBaseLength = function () {\n  var length = this.length;\n\n  if (length == null && typeof this.value === 'string' && this.maxLength == null && this.minLength == null) {\n    length = stringWidth(this.value);\n  }\n\n  return length;\n};\n\nTemplateItem.prototype.getLength = function () {\n  var length = this.getBaseLength();\n  if (length == null) return null;\n  return length + this.padLeft + this.padRight;\n};\n\nTemplateItem.prototype.getMaxLength = function () {\n  if (this.maxLength == null) return null;\n  return this.maxLength + this.padLeft + this.padRight;\n};\n\nTemplateItem.prototype.getMinLength = function () {\n  if (this.minLength == null) return null;\n  return this.minLength + this.padLeft + this.padRight;\n};","map":{"version":3,"sources":["/home/n/React/loginpagedemo/frontend/node_modules/gauge/template-item.js"],"names":["stringWidth","require","module","exports","TemplateItem","isPercent","num","slice","percent","Number","values","outputLength","overallOutputLength","finished","type","value","length","maxLength","minLength","kerning","align","padLeft","padRight","index","first","last","prop","Math","round","prototype","getBaseLength","getLength","getMaxLength","getMinLength"],"mappings":"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","sourcesContent":["'use strict'\nvar stringWidth = require('string-width')\n\nmodule.exports = TemplateItem\n\nfunction isPercent (num) {\n  if (typeof num !== 'string') return false\n  return num.slice(-1) === '%'\n}\n\nfunction percent (num) {\n  return Number(num.slice(0, -1)) / 100\n}\n\nfunction TemplateItem (values, outputLength) {\n  this.overallOutputLength = outputLength\n  this.finished = false\n  this.type = null\n  this.value = null\n  this.length = null\n  this.maxLength = null\n  this.minLength = null\n  this.kerning = null\n  this.align = 'left'\n  this.padLeft = 0\n  this.padRight = 0\n  this.index = null\n  this.first = null\n  this.last = null\n  if (typeof values === 'string') {\n    this.value = values\n  } else {\n    for (var prop in values) this[prop] = values[prop]\n  }\n  // Realize percents\n  if (isPercent(this.length)) {\n    this.length = Math.round(this.overallOutputLength * percent(this.length))\n  }\n  if (isPercent(this.minLength)) {\n    this.minLength = Math.round(this.overallOutputLength * percent(this.minLength))\n  }\n  if (isPercent(this.maxLength)) {\n    this.maxLength = Math.round(this.overallOutputLength * percent(this.maxLength))\n  }\n  return this\n}\n\nTemplateItem.prototype = {}\n\nTemplateItem.prototype.getBaseLength = function () {\n  var length = this.length\n  if (length == null && typeof this.value === 'string' && this.maxLength == null && this.minLength == null) {\n    length = stringWidth(this.value)\n  }\n  return length\n}\n\nTemplateItem.prototype.getLength = function () {\n  var length = this.getBaseLength()\n  if (length == null) return null\n  return length + this.padLeft + this.padRight\n}\n\nTemplateItem.prototype.getMaxLength = function () {\n  if (this.maxLength == null) return null\n  return this.maxLength + this.padLeft + this.padRight\n}\n\nTemplateItem.prototype.getMinLength = function () {\n  if (this.minLength == null) return null\n  return this.minLength + this.padLeft + this.padRight\n}\n\n"]},"metadata":{},"sourceType":"script"}