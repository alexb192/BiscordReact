{"ast":null,"code":"import _regeneratorRuntime from\"/home/n/React/loginpagedemo/frontend/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/n/React/loginpagedemo/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/home/n/React/loginpagedemo/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/n/React/loginpagedemo/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/n/React/loginpagedemo/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/home/n/React/loginpagedemo/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/home/n/React/loginpagedemo/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import InputField from'./InputField';import SubmitButton from'./SubmitButton';import UserStore from'./stores/UserStore';var LoginForm=/*#__PURE__*/function(_React$Component){_inherits(LoginForm,_React$Component);var _super=_createSuper(LoginForm);function LoginForm(props){var _this;_classCallCheck(this,LoginForm);_this=_super.call(this,props);_this.state={username:'',password:'',buttonDisabled:false};return _this;}_createClass(LoginForm,[{key:\"setInputValue\",value:function setInputValue(property,val){val=val.trim();if(val.length>12){return;}this.setState(_defineProperty({},property,val));}},{key:\"resetForm\",value:function resetForm(){this.setState({username:'',password:'',buttonDisabled:false});}},{key:\"doLogin\",value:function(){var _doLogin=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(this.state.username){_context.next=2;break;}return _context.abrupt(\"return\");case 2:if(this.state.password){_context.next=4;break;}return _context.abrupt(\"return\");case 4:this.setState({buttonDisabled:true});_context.prev=5;_context.next=8;return fetch('./login',{method:'post',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({username:this.state.username,password:this.state.password})});case 8:res=_context.sent;_context.next=11;return res.json();case 11:result=_context.sent;if(result&&result.success){UserStore.isLoggedIn=true;UserStore.username=result.username;}else if(result&&result.success===false){this.resetForm();alert(result.msg);}_context.next=19;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](5);console.log(_context.t0);this.resetForm();case 19:case\"end\":return _context.stop();}}},_callee,this,[[5,15]]);}));function doLogin(){return _doLogin.apply(this,arguments);}return doLogin;}()},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"loginForm\"},\"Log in\",/*#__PURE__*/React.createElement(InputField,{type:\"text\",placeholder:\"Username\",value:this.state.username?this.state.username:'',onChange:function onChange(val){return _this2.setInputValue('username',val);}}),/*#__PURE__*/React.createElement(InputField,{type:\"password\",placeholder:\"Password\",value:this.state.password?this.state.password:'',onChange:function onChange(val){return _this2.setInputValue('password',val);}}),/*#__PURE__*/React.createElement(SubmitButton,{text:\"Login\",disabled:this.state.buttonDisabled,onClick:function onClick(){return _this2.doLogin();}}));}}]);return LoginForm;}(React.Component);export default LoginForm;","map":{"version":3,"sources":["/home/n/React/loginpagedemo/frontend/src/LoginForm.js"],"names":["React","InputField","SubmitButton","UserStore","LoginForm","props","state","username","password","buttonDisabled","property","val","trim","length","setState","fetch","method","headers","body","JSON","stringify","res","json","result","success","isLoggedIn","resetForm","alert","msg","console","log","setInputValue","doLogin","Component"],"mappings":"gzBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,oBAAtB,C,GAEMC,CAAAA,S,kHAEF,mBAAYC,KAAZ,CACA,2CACI,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACTC,QAAQ,CAAE,EADD,CAETC,QAAQ,CAAE,EAFD,CAGTC,cAAc,CAAE,KAHP,CAAb,CAFJ,aAOC,C,0EAEaC,Q,CAAUC,G,CAAK,CACzBA,GAAG,CAAGA,GAAG,CAACC,IAAJ,EAAN,CACA,GAAID,GAAG,CAACE,MAAJ,CAAa,EAAjB,CAAqB,CACjB,OACH,CACD,KAAKC,QAAL,oBACKJ,QADL,CACgBC,GADhB,GAGH,C,6CAEW,CACR,KAAKG,QAAL,CAAc,CACVP,QAAQ,CAAE,EADA,CAEVC,QAAQ,CAAE,EAFA,CAGVC,cAAc,CAAE,KAHN,CAAd,EAKH,C,4PAIQ,KAAKH,KAAL,CAAWC,Q,oEAIX,KAAKD,KAAL,CAAWE,Q,iEAIhB,KAAKM,QAAL,CAAc,CACVL,cAAc,CAAE,IADN,CAAd,E,sCAMoBM,CAAAA,KAAK,CAAC,SAAD,CAAY,CAC7BC,MAAM,CAAE,MADqB,CAE7BC,OAAO,CAAE,CACL,SAAU,kBADL,CAEL,eAAgB,kBAFX,CAFoB,CAM7BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACjBb,QAAQ,CAAE,KAAKD,KAAL,CAAWC,QADJ,CAEjBC,QAAQ,CAAE,KAAKF,KAAL,CAAWE,QAFJ,CAAf,CANuB,CAAZ,C,QAAjBa,G,sCAYeA,CAAAA,GAAG,CAACC,IAAJ,E,SAAfC,M,eAEJ,GAAIA,MAAM,EAAIA,MAAM,CAACC,OAArB,CAA8B,CAC1BrB,SAAS,CAACsB,UAAV,CAAuB,IAAvB,CACAtB,SAAS,CAACI,QAAV,CAAqBgB,MAAM,CAAChB,QAA5B,CACH,CAHD,IAKK,IAAIgB,MAAM,EAAIA,MAAM,CAACC,OAAP,GAAmB,KAAjC,CAAuC,CACxC,KAAKE,SAAL,GACAC,KAAK,CAACJ,MAAM,CAACK,GAAR,CAAL,CACH,C,iFAKDC,OAAO,CAACC,GAAR,cACA,KAAKJ,SAAL,G,2LAKD,iBACP,mBACE,2BAAK,SAAS,CAAC,WAAf,wBAGE,oBAAC,UAAD,EACI,IAAI,CAAG,MADX,CAEI,WAAW,CAAG,UAFlB,CAGI,KAAK,CAAI,KAAKpB,KAAL,CAAWC,QAAX,CAAsB,KAAKD,KAAL,CAAWC,QAAjC,CAA4C,EAHzD,CAII,QAAQ,CAAK,kBAACI,GAAD,QAAS,CAAA,MAAI,CAACoB,aAAL,CAAmB,UAAnB,CAA+BpB,GAA/B,CAAT,EAJjB,EAHF,cAUE,oBAAC,UAAD,EACI,IAAI,CAAG,UADX,CAEI,WAAW,CAAG,UAFlB,CAGI,KAAK,CAAI,KAAKL,KAAL,CAAWE,QAAX,CAAsB,KAAKF,KAAL,CAAWE,QAAjC,CAA4C,EAHzD,CAII,QAAQ,CAAK,kBAACG,GAAD,QAAS,CAAA,MAAI,CAACoB,aAAL,CAAmB,UAAnB,CAA+BpB,GAA/B,CAAT,EAJjB,EAVF,cAiBE,oBAAC,YAAD,EACI,IAAI,CAAG,OADX,CAEI,QAAQ,CAAI,KAAKL,KAAL,CAAWG,cAF3B,CAGI,OAAO,CAAK,yBAAM,CAAA,MAAI,CAACuB,OAAL,EAAN,EAHhB,EAjBF,CADF,CA0BD,C,uBA1GqBhC,KAAK,CAACiC,S,EA8G9B,cAAe7B,CAAAA,SAAf","sourcesContent":["import React from 'react';\nimport InputField from './InputField';\nimport SubmitButton from './SubmitButton';\nimport UserStore from './stores/UserStore';\n\nclass LoginForm extends React.Component {\n\n    constructor(props)\n    {\n        super(props)\n        this.state = {\n            username: '',\n            password: '',\n            buttonDisabled: false\n        }\n    }\n\n    setInputValue(property, val) {\n        val = val.trim();\n        if (val.length > 12) {\n            return;\n        }\n        this.setState({\n            [property]: val\n        })\n    }\n\n    resetForm() {\n        this.setState({\n            username: '',\n            password: '',\n            buttonDisabled: false\n        })\n    }\n\n    async doLogin() {\n\n        if (!this.state.username) {\n            return;\n        }\n\n        if (!this.state.password) {\n            return;\n        }\n\n        this.setState({\n            buttonDisabled: true\n        })\n\n        try {\n\n            let res = await fetch('./login', {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username: this.state.username,\n                    password: this.state.password\n                })\n            })\n\n            let result = await res.json();\n\n            if (result && result.success) {\n                UserStore.isLoggedIn = true;\n                UserStore.username = result.username;\n            }\n\n            else if (result && result.success === false){\n                this.resetForm();\n                alert(result.msg);\n            }\n\n        }\n\n        catch(e) {\n            console.log(e);\n            this.resetForm();\n        }\n\n    }\n\n  render() {\n    return (\n      <div className=\"loginForm\">\n        \n        Log in\n        <InputField\n            type = 'text'\n            placeholder = 'Username'\n            value = {this.state.username ? this.state.username : ''}\n            onChange = { (val) => this.setInputValue('username', val) }\n        />\n\n        <InputField\n            type = 'password'\n            placeholder = 'Password'\n            value = {this.state.password ? this.state.password : ''}\n            onChange = { (val) => this.setInputValue('password', val) }\n        />\n\n        <SubmitButton \n            text = 'Login'\n            disabled = {this.state.buttonDisabled}\n            onClick = { () => this.doLogin() }\n        />\n\n      </div>\n    );\n  }\n\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}