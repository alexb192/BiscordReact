{"ast":null,"code":"\"use strict\";\n\nmodule.exports = exports;\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar win = process.platform == 'win32';\nvar existsSync = fs.existsSync || path.existsSync;\n\nvar cp = require('child_process'); // try to build up the complete path to node-gyp\n\n/* priority:\n  - node-gyp on ENV:npm_config_node_gyp (https://github.com/npm/npm/pull/4887)\n  - node-gyp on NODE_PATH\n  - node-gyp inside npm on NODE_PATH (ignore on iojs)\n  - node-gyp inside npm beside node exe\n*/\n\n\nfunction which_node_gyp() {\n  var node_gyp_bin;\n\n  if (process.env.npm_config_node_gyp) {\n    try {\n      node_gyp_bin = process.env.npm_config_node_gyp;\n\n      if (existsSync(node_gyp_bin)) {\n        return node_gyp_bin;\n      }\n    } catch (err) {}\n  }\n\n  try {\n    var node_gyp_main = require.resolve('node-gyp');\n\n    node_gyp_bin = path.join(path.dirname(path.dirname(node_gyp_main)), 'bin/node-gyp.js');\n\n    if (existsSync(node_gyp_bin)) {\n      return node_gyp_bin;\n    }\n  } catch (err) {}\n\n  if (process.execPath.indexOf('iojs') === -1) {\n    try {\n      var npm_main = require.resolve('npm');\n\n      node_gyp_bin = path.join(path.dirname(path.dirname(npm_main)), 'node_modules/node-gyp/bin/node-gyp.js');\n\n      if (existsSync(node_gyp_bin)) {\n        return node_gyp_bin;\n      }\n    } catch (err) {}\n  }\n\n  var npm_base = path.join(path.dirname(path.dirname(process.execPath)), 'lib/node_modules/npm/');\n  node_gyp_bin = path.join(npm_base, 'node_modules/node-gyp/bin/node-gyp.js');\n\n  if (existsSync(node_gyp_bin)) {\n    return node_gyp_bin;\n  }\n}\n\nmodule.exports.run_gyp = function (args, opts, callback) {\n  var shell_cmd = '';\n  var cmd_args = [];\n\n  if (opts.runtime && opts.runtime == 'node-webkit') {\n    shell_cmd = 'nw-gyp';\n    if (win) shell_cmd += '.cmd';\n  } else {\n    var node_gyp_path = which_node_gyp();\n\n    if (node_gyp_path) {\n      shell_cmd = process.execPath;\n      cmd_args.push(node_gyp_path);\n    } else {\n      shell_cmd = 'node-gyp';\n      if (win) shell_cmd += '.cmd';\n    }\n  }\n\n  var final_args = cmd_args.concat(args);\n  var cmd = cp.spawn(shell_cmd, final_args, {\n    cwd: undefined,\n    env: process.env,\n    stdio: [0, 1, 2]\n  });\n  cmd.on('error', function (err) {\n    if (err) {\n      return callback(new Error(\"Failed to execute '\" + shell_cmd + ' ' + final_args.join(' ') + \"' (\" + err + \")\"));\n    }\n\n    callback(null, opts);\n  });\n  cmd.on('close', function (code) {\n    if (code && code !== 0) {\n      return callback(new Error(\"Failed to execute '\" + shell_cmd + ' ' + final_args.join(' ') + \"' (\" + code + \")\"));\n    }\n\n    callback(null, opts);\n  });\n};","map":{"version":3,"sources":["/home/n/React/loginpagedemo/frontend/node_modules/node-pre-gyp/lib/util/compile.js"],"names":["module","exports","fs","require","path","win","process","platform","existsSync","cp","which_node_gyp","node_gyp_bin","env","npm_config_node_gyp","err","node_gyp_main","resolve","join","dirname","execPath","indexOf","npm_main","npm_base","run_gyp","args","opts","callback","shell_cmd","cmd_args","runtime","node_gyp_path","push","final_args","concat","cmd","spawn","cwd","undefined","stdio","on","Error","code"],"mappings":"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","sourcesContent":["\"use strict\";\n\nmodule.exports = exports;\n\nvar fs = require('fs');\nvar path = require('path');\nvar win = process.platform == 'win32';\nvar existsSync = fs.existsSync || path.existsSync;\nvar cp = require('child_process');\n\n// try to build up the complete path to node-gyp\n/* priority:\n  - node-gyp on ENV:npm_config_node_gyp (https://github.com/npm/npm/pull/4887)\n  - node-gyp on NODE_PATH\n  - node-gyp inside npm on NODE_PATH (ignore on iojs)\n  - node-gyp inside npm beside node exe\n*/\nfunction which_node_gyp() {\n    var node_gyp_bin;\n    if (process.env.npm_config_node_gyp) {\n      try {\n          node_gyp_bin = process.env.npm_config_node_gyp;\n          if (existsSync(node_gyp_bin)) {\n              return node_gyp_bin;\n          }\n      } catch (err) { }\n    }\n    try {\n        var node_gyp_main = require.resolve('node-gyp');\n        node_gyp_bin = path.join(path.dirname(\n                                     path.dirname(node_gyp_main)),\n                                     'bin/node-gyp.js');\n        if (existsSync(node_gyp_bin)) {\n            return node_gyp_bin;\n        }\n    } catch (err) { }\n    if (process.execPath.indexOf('iojs') === -1) {\n        try {\n            var npm_main = require.resolve('npm');\n            node_gyp_bin = path.join(path.dirname(\n                                         path.dirname(npm_main)),\n                                         'node_modules/node-gyp/bin/node-gyp.js');\n            if (existsSync(node_gyp_bin)) {\n                return node_gyp_bin;\n            }\n        } catch (err) { }\n    }\n    var npm_base = path.join(path.dirname(\n                             path.dirname(process.execPath)),\n                             'lib/node_modules/npm/');\n    node_gyp_bin = path.join(npm_base, 'node_modules/node-gyp/bin/node-gyp.js');\n    if (existsSync(node_gyp_bin)) {\n        return node_gyp_bin;\n    }\n}\n\nmodule.exports.run_gyp = function(args,opts,callback) {\n    var shell_cmd = '';\n    var cmd_args = [];\n    if (opts.runtime && opts.runtime == 'node-webkit') {\n        shell_cmd = 'nw-gyp';\n        if (win) shell_cmd += '.cmd';\n    } else {\n        var node_gyp_path = which_node_gyp();\n        if (node_gyp_path) {\n            shell_cmd = process.execPath;\n            cmd_args.push(node_gyp_path);\n        } else {\n            shell_cmd = 'node-gyp';\n            if (win) shell_cmd += '.cmd';\n        }\n    }\n    var final_args = cmd_args.concat(args);\n    var cmd = cp.spawn(shell_cmd, final_args, {cwd: undefined, env: process.env, stdio: [ 0, 1, 2]});\n    cmd.on('error', function (err) {\n        if (err) {\n            return callback(new Error(\"Failed to execute '\" + shell_cmd + ' ' + final_args.join(' ') + \"' (\" + err + \")\"));\n        }\n        callback(null,opts);\n    });\n    cmd.on('close', function (code) {\n        if (code && code !== 0) {\n            return callback(new Error(\"Failed to execute '\" + shell_cmd + ' ' + final_args.join(' ') + \"' (\" + code + \")\"));\n        }\n        callback(null,opts);\n    });\n};\n"]},"metadata":{},"sourceType":"script"}