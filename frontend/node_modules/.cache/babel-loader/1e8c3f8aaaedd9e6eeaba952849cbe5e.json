{"ast":null,"code":"'use strict';\n\nconst path = require('path');\n\nconst log = require('npmlog');\n\nfunction findNodeDirectory(scriptLocation, processObj) {\n  // set dirname and process if not passed in\n  // this facilitates regression tests\n  if (scriptLocation === undefined) {\n    scriptLocation = __dirname;\n  }\n\n  if (processObj === undefined) {\n    processObj = process;\n  } // Have a look to see what is above us, to try and work out where we are\n\n\n  var npmParentDirectory = path.join(scriptLocation, '../../../..');\n  log.verbose('node-gyp root', 'npm_parent_directory is ' + path.basename(npmParentDirectory));\n  var nodeRootDir = '';\n  log.verbose('node-gyp root', 'Finding node root directory');\n\n  if (path.basename(npmParentDirectory) === 'deps') {\n    // We are in a build directory where this script lives in\n    // deps/npm/node_modules/node-gyp/lib\n    nodeRootDir = path.join(npmParentDirectory, '..');\n    log.verbose('node-gyp root', 'in build directory, root = ' + nodeRootDir);\n  } else if (path.basename(npmParentDirectory) === 'node_modules') {\n    // We are in a node install directory where this script lives in\n    // lib/node_modules/npm/node_modules/node-gyp/lib or\n    // node_modules/npm/node_modules/node-gyp/lib depending on the\n    // platform\n    if (processObj.platform === 'win32') {\n      nodeRootDir = path.join(npmParentDirectory, '..');\n    } else {\n      nodeRootDir = path.join(npmParentDirectory, '../..');\n    }\n\n    log.verbose('node-gyp root', 'in install directory, root = ' + nodeRootDir);\n  } else {\n    // We don't know where we are, try working it out from the location\n    // of the node binary\n    var nodeDir = path.dirname(processObj.execPath);\n    var directoryUp = path.basename(nodeDir);\n\n    if (directoryUp === 'bin') {\n      nodeRootDir = path.join(nodeDir, '..');\n    } else if (directoryUp === 'Release' || directoryUp === 'Debug') {\n      // If we are a recently built node, and the directory structure\n      // is that of a repository. If we are on Windows then we only need\n      // to go one level up, everything else, two\n      if (processObj.platform === 'win32') {\n        nodeRootDir = path.join(nodeDir, '..');\n      } else {\n        nodeRootDir = path.join(nodeDir, '../..');\n      }\n    } // Else return the default blank, \"\".\n\n  }\n\n  return nodeRootDir;\n}\n\nmodule.exports = findNodeDirectory;","map":{"version":3,"sources":["/home/n/React/loginpagedemo/frontend/node_modules/node-gyp/lib/find-node-directory.js"],"names":["path","require","log","findNodeDirectory","scriptLocation","processObj","undefined","__dirname","process","npmParentDirectory","join","verbose","basename","nodeRootDir","platform","nodeDir","dirname","execPath","directoryUp","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,QAAD,CAAnB;;AAEA,SAASE,iBAAT,CAA4BC,cAA5B,EAA4CC,UAA5C,EAAwD;AACtD;AACA;AACA,MAAID,cAAc,KAAKE,SAAvB,EAAkC;AAChCF,IAAAA,cAAc,GAAGG,SAAjB;AACD;;AACD,MAAIF,UAAU,KAAKC,SAAnB,EAA8B;AAC5BD,IAAAA,UAAU,GAAGG,OAAb;AACD,GARqD,CAUtD;;;AACA,MAAIC,kBAAkB,GAAGT,IAAI,CAACU,IAAL,CAAUN,cAAV,EAA0B,aAA1B,CAAzB;AACAF,EAAAA,GAAG,CAACS,OAAJ,CAAY,eAAZ,EAA6B,6BACjBX,IAAI,CAACY,QAAL,CAAcH,kBAAd,CADZ;AAEA,MAAII,WAAW,GAAG,EAAlB;AAEAX,EAAAA,GAAG,CAACS,OAAJ,CAAY,eAAZ,EAA6B,6BAA7B;;AACA,MAAIX,IAAI,CAACY,QAAL,CAAcH,kBAAd,MAAsC,MAA1C,EAAkD;AAChD;AACA;AACAI,IAAAA,WAAW,GAAGb,IAAI,CAACU,IAAL,CAAUD,kBAAV,EAA8B,IAA9B,CAAd;AACAP,IAAAA,GAAG,CAACS,OAAJ,CAAY,eAAZ,EAA6B,gCACjBE,WADZ;AAED,GAND,MAMO,IAAIb,IAAI,CAACY,QAAL,CAAcH,kBAAd,MAAsC,cAA1C,EAA0D;AAC/D;AACA;AACA;AACA;AACA,QAAIJ,UAAU,CAACS,QAAX,KAAwB,OAA5B,EAAqC;AACnCD,MAAAA,WAAW,GAAGb,IAAI,CAACU,IAAL,CAAUD,kBAAV,EAA8B,IAA9B,CAAd;AACD,KAFD,MAEO;AACLI,MAAAA,WAAW,GAAGb,IAAI,CAACU,IAAL,CAAUD,kBAAV,EAA8B,OAA9B,CAAd;AACD;;AACDP,IAAAA,GAAG,CAACS,OAAJ,CAAY,eAAZ,EAA6B,kCACjBE,WADZ;AAED,GAZM,MAYA;AACL;AACA;AACA,QAAIE,OAAO,GAAGf,IAAI,CAACgB,OAAL,CAAaX,UAAU,CAACY,QAAxB,CAAd;AACA,QAAIC,WAAW,GAAGlB,IAAI,CAACY,QAAL,CAAcG,OAAd,CAAlB;;AACA,QAAIG,WAAW,KAAK,KAApB,EAA2B;AACzBL,MAAAA,WAAW,GAAGb,IAAI,CAACU,IAAL,CAAUK,OAAV,EAAmB,IAAnB,CAAd;AACD,KAFD,MAEO,IAAIG,WAAW,KAAK,SAAhB,IAA6BA,WAAW,KAAK,OAAjD,EAA0D;AAC/D;AACA;AACA;AACA,UAAIb,UAAU,CAACS,QAAX,KAAwB,OAA5B,EAAqC;AACnCD,QAAAA,WAAW,GAAGb,IAAI,CAACU,IAAL,CAAUK,OAAV,EAAmB,IAAnB,CAAd;AACD,OAFD,MAEO;AACLF,QAAAA,WAAW,GAAGb,IAAI,CAACU,IAAL,CAAUK,OAAV,EAAmB,OAAnB,CAAd;AACD;AACF,KAhBI,CAiBL;;AACD;;AACD,SAAOF,WAAP;AACD;;AAEDM,MAAM,CAACC,OAAP,GAAiBjB,iBAAjB","sourcesContent":["'use strict'\n\nconst path = require('path')\nconst log = require('npmlog')\n\nfunction findNodeDirectory (scriptLocation, processObj) {\n  // set dirname and process if not passed in\n  // this facilitates regression tests\n  if (scriptLocation === undefined) {\n    scriptLocation = __dirname\n  }\n  if (processObj === undefined) {\n    processObj = process\n  }\n\n  // Have a look to see what is above us, to try and work out where we are\n  var npmParentDirectory = path.join(scriptLocation, '../../../..')\n  log.verbose('node-gyp root', 'npm_parent_directory is ' +\n              path.basename(npmParentDirectory))\n  var nodeRootDir = ''\n\n  log.verbose('node-gyp root', 'Finding node root directory')\n  if (path.basename(npmParentDirectory) === 'deps') {\n    // We are in a build directory where this script lives in\n    // deps/npm/node_modules/node-gyp/lib\n    nodeRootDir = path.join(npmParentDirectory, '..')\n    log.verbose('node-gyp root', 'in build directory, root = ' +\n                nodeRootDir)\n  } else if (path.basename(npmParentDirectory) === 'node_modules') {\n    // We are in a node install directory where this script lives in\n    // lib/node_modules/npm/node_modules/node-gyp/lib or\n    // node_modules/npm/node_modules/node-gyp/lib depending on the\n    // platform\n    if (processObj.platform === 'win32') {\n      nodeRootDir = path.join(npmParentDirectory, '..')\n    } else {\n      nodeRootDir = path.join(npmParentDirectory, '../..')\n    }\n    log.verbose('node-gyp root', 'in install directory, root = ' +\n                nodeRootDir)\n  } else {\n    // We don't know where we are, try working it out from the location\n    // of the node binary\n    var nodeDir = path.dirname(processObj.execPath)\n    var directoryUp = path.basename(nodeDir)\n    if (directoryUp === 'bin') {\n      nodeRootDir = path.join(nodeDir, '..')\n    } else if (directoryUp === 'Release' || directoryUp === 'Debug') {\n      // If we are a recently built node, and the directory structure\n      // is that of a repository. If we are on Windows then we only need\n      // to go one level up, everything else, two\n      if (processObj.platform === 'win32') {\n        nodeRootDir = path.join(nodeDir, '..')\n      } else {\n        nodeRootDir = path.join(nodeDir, '../..')\n      }\n    }\n    // Else return the default blank, \"\".\n  }\n  return nodeRootDir\n}\n\nmodule.exports = findNodeDirectory\n"]},"metadata":{},"sourceType":"script"}