{"ast":null,"code":"\"use strict\";\n\nmodule.exports = exports = reveal;\nexports.usage = 'Reveals data on the versioned binary';\n\nvar fs = require('fs');\n\nvar versioning = require('./util/versioning.js');\n\nvar napi = require('./util/napi.js');\n\nfunction unix_paths(key, val) {\n  return val && val.replace ? val.replace(/\\\\/g, '/') : val;\n}\n\nfunction reveal(gyp, argv, callback) {\n  var package_json = JSON.parse(fs.readFileSync('./package.json'));\n  var napi_build_version = napi.get_napi_build_version_from_command_args(argv);\n  var opts = versioning.evaluate(package_json, gyp.opts, napi_build_version);\n  var hit = false; // if a second arg is passed look to see\n  // if it is a known option\n  //console.log(JSON.stringify(gyp.opts,null,1))\n\n  var remain = gyp.opts.argv.remain[gyp.opts.argv.remain.length - 1];\n\n  if (remain && opts.hasOwnProperty(remain)) {\n    console.log(opts[remain].replace(/\\\\/g, '/'));\n    hit = true;\n  } // otherwise return all options as json\n\n\n  if (!hit) {\n    console.log(JSON.stringify(opts, unix_paths, 2));\n  }\n\n  return callback();\n}","map":{"version":3,"sources":["/home/n/React/loginpagedemo/frontend/node_modules/node-pre-gyp/lib/reveal.js"],"names":["module","exports","reveal","usage","fs","require","versioning","napi","unix_paths","key","val","replace","gyp","argv","callback","package_json","JSON","parse","readFileSync","napi_build_version","get_napi_build_version_from_command_args","opts","evaluate","hit","remain","length","hasOwnProperty","console","log","stringify"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBA,OAAO,GAAGC,MAA3B;AAEAD,OAAO,CAACE,KAAR,GAAgB,sCAAhB;;AAEA,IAAIC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,sBAAD,CAAxB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,gBAAD,CAAlB;;AAEA,SAASG,UAAT,CAAoBC,GAApB,EAAyBC,GAAzB,EAA8B;AAC1B,SAAOA,GAAG,IAAIA,GAAG,CAACC,OAAX,GAAqBD,GAAG,CAACC,OAAJ,CAAY,KAAZ,EAAmB,GAAnB,CAArB,GAA+CD,GAAtD;AACH;;AAED,SAASR,MAAT,CAAgBU,GAAhB,EAAqBC,IAArB,EAA2BC,QAA3B,EAAqC;AACjC,MAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWb,EAAE,CAACc,YAAH,CAAgB,gBAAhB,CAAX,CAAnB;AACA,MAAIC,kBAAkB,GAAGZ,IAAI,CAACa,wCAAL,CAA8CP,IAA9C,CAAzB;AACA,MAAIQ,IAAI,GAAGf,UAAU,CAACgB,QAAX,CAAoBP,YAApB,EAAkCH,GAAG,CAACS,IAAtC,EAA4CF,kBAA5C,CAAX;AACA,MAAII,GAAG,GAAG,KAAV,CAJiC,CAKjC;AACA;AACA;;AACA,MAAIC,MAAM,GAAGZ,GAAG,CAACS,IAAJ,CAASR,IAAT,CAAcW,MAAd,CAAqBZ,GAAG,CAACS,IAAJ,CAASR,IAAT,CAAcW,MAAd,CAAqBC,MAArB,GAA4B,CAAjD,CAAb;;AACA,MAAID,MAAM,IAAIH,IAAI,CAACK,cAAL,CAAoBF,MAApB,CAAd,EAA2C;AACvCG,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACG,MAAD,CAAJ,CAAab,OAAb,CAAqB,KAArB,EAA4B,GAA5B,CAAZ;AACAY,IAAAA,GAAG,GAAG,IAAN;AACH,GAZgC,CAajC;;;AACA,MAAI,CAACA,GAAL,EAAU;AACNI,IAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAI,CAACa,SAAL,CAAeR,IAAf,EAAoBb,UAApB,EAA+B,CAA/B,CAAZ;AACH;;AACD,SAAOM,QAAQ,EAAf;AACH","sourcesContent":["\"use strict\";\n\nmodule.exports = exports = reveal;\n\nexports.usage = 'Reveals data on the versioned binary';\n\nvar fs = require('fs');\nvar versioning = require('./util/versioning.js');\nvar napi = require('./util/napi.js');\n\nfunction unix_paths(key, val) {\n    return val && val.replace ? val.replace(/\\\\/g, '/') : val;\n}\n\nfunction reveal(gyp, argv, callback) {\n    var package_json = JSON.parse(fs.readFileSync('./package.json'));\n    var napi_build_version = napi.get_napi_build_version_from_command_args(argv);\n    var opts = versioning.evaluate(package_json, gyp.opts, napi_build_version);\n    var hit = false;\n    // if a second arg is passed look to see\n    // if it is a known option\n    //console.log(JSON.stringify(gyp.opts,null,1))\n    var remain = gyp.opts.argv.remain[gyp.opts.argv.remain.length-1];\n    if (remain && opts.hasOwnProperty(remain)) {\n        console.log(opts[remain].replace(/\\\\/g, '/'));\n        hit = true;\n    }\n    // otherwise return all options as json\n    if (!hit) {\n        console.log(JSON.stringify(opts,unix_paths,2));\n    }\n    return callback();\n}\n"]},"metadata":{},"sourceType":"script"}