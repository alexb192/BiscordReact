{"ast":null,"code":"'use strict';\n\nvar objectAssign = require('object-assign');\n\nmodule.exports = function () {\n  return ThemeSetProto.newThemeSet();\n};\n\nvar ThemeSetProto = {};\nThemeSetProto.baseTheme = require('./base-theme.js');\n\nThemeSetProto.newTheme = function (parent, theme) {\n  if (!theme) {\n    theme = parent;\n    parent = this.baseTheme;\n  }\n\n  return objectAssign({}, parent, theme);\n};\n\nThemeSetProto.getThemeNames = function () {\n  return Object.keys(this.themes);\n};\n\nThemeSetProto.addTheme = function (name, parent, theme) {\n  this.themes[name] = this.newTheme(parent, theme);\n};\n\nThemeSetProto.addToAllThemes = function (theme) {\n  var themes = this.themes;\n  Object.keys(themes).forEach(function (name) {\n    objectAssign(themes[name], theme);\n  });\n  objectAssign(this.baseTheme, theme);\n};\n\nThemeSetProto.getTheme = function (name) {\n  if (!this.themes[name]) throw this.newMissingThemeError(name);\n  return this.themes[name];\n};\n\nThemeSetProto.setDefault = function (opts, name) {\n  if (name == null) {\n    name = opts;\n    opts = {};\n  }\n\n  var platform = opts.platform == null ? 'fallback' : opts.platform;\n  var hasUnicode = !!opts.hasUnicode;\n  var hasColor = !!opts.hasColor;\n  if (!this.defaults[platform]) this.defaults[platform] = {\n    true: {},\n    false: {}\n  };\n  this.defaults[platform][hasUnicode][hasColor] = name;\n};\n\nThemeSetProto.getDefault = function (opts) {\n  if (!opts) opts = {};\n  var platformName = opts.platform || process.platform;\n  var platform = this.defaults[platformName] || this.defaults.fallback;\n  var hasUnicode = !!opts.hasUnicode;\n  var hasColor = !!opts.hasColor;\n  if (!platform) throw this.newMissingDefaultThemeError(platformName, hasUnicode, hasColor);\n\n  if (!platform[hasUnicode][hasColor]) {\n    if (hasUnicode && hasColor && platform[!hasUnicode][hasColor]) {\n      hasUnicode = false;\n    } else if (hasUnicode && hasColor && platform[hasUnicode][!hasColor]) {\n      hasColor = false;\n    } else if (hasUnicode && hasColor && platform[!hasUnicode][!hasColor]) {\n      hasUnicode = false;\n      hasColor = false;\n    } else if (hasUnicode && !hasColor && platform[!hasUnicode][hasColor]) {\n      hasUnicode = false;\n    } else if (!hasUnicode && hasColor && platform[hasUnicode][!hasColor]) {\n      hasColor = false;\n    } else if (platform === this.defaults.fallback) {\n      throw this.newMissingDefaultThemeError(platformName, hasUnicode, hasColor);\n    }\n  }\n\n  if (platform[hasUnicode][hasColor]) {\n    return this.getTheme(platform[hasUnicode][hasColor]);\n  } else {\n    return this.getDefault(objectAssign({}, opts, {\n      platform: 'fallback'\n    }));\n  }\n};\n\nThemeSetProto.newMissingThemeError = function newMissingThemeError(name) {\n  var err = new Error('Could not find a gauge theme named \"' + name + '\"');\n  Error.captureStackTrace.call(err, newMissingThemeError);\n  err.theme = name;\n  err.code = 'EMISSINGTHEME';\n  return err;\n};\n\nThemeSetProto.newMissingDefaultThemeError = function newMissingDefaultThemeError(platformName, hasUnicode, hasColor) {\n  var err = new Error('Could not find a gauge theme for your platform/unicode/color use combo:\\n' + '    platform = ' + platformName + '\\n' + '    hasUnicode = ' + hasUnicode + '\\n' + '    hasColor = ' + hasColor);\n  Error.captureStackTrace.call(err, newMissingDefaultThemeError);\n  err.platform = platformName;\n  err.hasUnicode = hasUnicode;\n  err.hasColor = hasColor;\n  err.code = 'EMISSINGTHEME';\n  return err;\n};\n\nThemeSetProto.newThemeSet = function () {\n  var themeset = function (opts) {\n    return themeset.getDefault(opts);\n  };\n\n  return objectAssign(themeset, ThemeSetProto, {\n    themes: objectAssign({}, this.themes),\n    baseTheme: objectAssign({}, this.baseTheme),\n    defaults: JSON.parse(JSON.stringify(this.defaults || {}))\n  });\n};","map":{"version":3,"sources":["/home/n/React/loginpagedemo/frontend/node_modules/gauge/theme-set.js"],"names":["objectAssign","require","module","exports","ThemeSetProto","newThemeSet","baseTheme","newTheme","parent","theme","getThemeNames","Object","keys","themes","addTheme","name","addToAllThemes","forEach","getTheme","newMissingThemeError","setDefault","opts","platform","hasUnicode","hasColor","defaults","true","false","getDefault","platformName","process","fallback","newMissingDefaultThemeError","err","Error","captureStackTrace","call","code","themeset","JSON","parse","stringify"],"mappings":"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","sourcesContent":["'use strict'\nvar objectAssign = require('object-assign')\n\nmodule.exports = function () {\n  return ThemeSetProto.newThemeSet()\n}\n\nvar ThemeSetProto = {}\n\nThemeSetProto.baseTheme = require('./base-theme.js')\n\nThemeSetProto.newTheme = function (parent, theme) {\n  if (!theme) {\n    theme = parent\n    parent = this.baseTheme\n  }\n  return objectAssign({}, parent, theme)\n}\n\nThemeSetProto.getThemeNames = function () {\n  return Object.keys(this.themes)\n}\n\nThemeSetProto.addTheme = function (name, parent, theme) {\n  this.themes[name] = this.newTheme(parent, theme)\n}\n\nThemeSetProto.addToAllThemes = function (theme) {\n  var themes = this.themes\n  Object.keys(themes).forEach(function (name) {\n    objectAssign(themes[name], theme)\n  })\n  objectAssign(this.baseTheme, theme)\n}\n\nThemeSetProto.getTheme = function (name) {\n  if (!this.themes[name]) throw this.newMissingThemeError(name)\n  return this.themes[name]\n}\n\nThemeSetProto.setDefault = function (opts, name) {\n  if (name == null) {\n    name = opts\n    opts = {}\n  }\n  var platform = opts.platform == null ? 'fallback' : opts.platform\n  var hasUnicode = !!opts.hasUnicode\n  var hasColor = !!opts.hasColor\n  if (!this.defaults[platform]) this.defaults[platform] = {true: {}, false: {}}\n  this.defaults[platform][hasUnicode][hasColor] = name\n}\n\nThemeSetProto.getDefault = function (opts) {\n  if (!opts) opts = {}\n  var platformName = opts.platform || process.platform\n  var platform = this.defaults[platformName] || this.defaults.fallback\n  var hasUnicode = !!opts.hasUnicode\n  var hasColor = !!opts.hasColor\n  if (!platform) throw this.newMissingDefaultThemeError(platformName, hasUnicode, hasColor)\n  if (!platform[hasUnicode][hasColor]) {\n    if (hasUnicode && hasColor && platform[!hasUnicode][hasColor]) {\n      hasUnicode = false\n    } else if (hasUnicode && hasColor && platform[hasUnicode][!hasColor]) {\n      hasColor = false\n    } else if (hasUnicode && hasColor && platform[!hasUnicode][!hasColor]) {\n      hasUnicode = false\n      hasColor = false\n    } else if (hasUnicode && !hasColor && platform[!hasUnicode][hasColor]) {\n      hasUnicode = false\n    } else if (!hasUnicode && hasColor && platform[hasUnicode][!hasColor]) {\n      hasColor = false\n    } else if (platform === this.defaults.fallback) {\n      throw this.newMissingDefaultThemeError(platformName, hasUnicode, hasColor)\n    }\n  }\n  if (platform[hasUnicode][hasColor]) {\n    return this.getTheme(platform[hasUnicode][hasColor])\n  } else {\n    return this.getDefault(objectAssign({}, opts, {platform: 'fallback'}))\n  }\n}\n\nThemeSetProto.newMissingThemeError = function newMissingThemeError (name) {\n  var err = new Error('Could not find a gauge theme named \"' + name + '\"')\n  Error.captureStackTrace.call(err, newMissingThemeError)\n  err.theme = name\n  err.code = 'EMISSINGTHEME'\n  return err\n}\n\nThemeSetProto.newMissingDefaultThemeError = function newMissingDefaultThemeError (platformName, hasUnicode, hasColor) {\n  var err = new Error(\n    'Could not find a gauge theme for your platform/unicode/color use combo:\\n' +\n    '    platform = ' + platformName + '\\n' +\n    '    hasUnicode = ' + hasUnicode + '\\n' +\n    '    hasColor = ' + hasColor)\n  Error.captureStackTrace.call(err, newMissingDefaultThemeError)\n  err.platform = platformName\n  err.hasUnicode = hasUnicode\n  err.hasColor = hasColor\n  err.code = 'EMISSINGTHEME'\n  return err\n}\n\nThemeSetProto.newThemeSet = function () {\n  var themeset = function (opts) {\n    return themeset.getDefault(opts)\n  }\n  return objectAssign(themeset, ThemeSetProto, {\n    themes: objectAssign({}, this.themes),\n    baseTheme: objectAssign({}, this.baseTheme),\n    defaults: JSON.parse(JSON.stringify(this.defaults || {}))\n  })\n}\n\n"]},"metadata":{},"sourceType":"script"}