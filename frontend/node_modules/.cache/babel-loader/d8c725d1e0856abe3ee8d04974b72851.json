{"ast":null,"code":"import _classCallCheck from\"/home/n/React/biscord/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/n/React/biscord/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/n/React/biscord/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/n/React/biscord/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import socketIOClient from'socket.io-client';import'./Chat.css';var ENDPOINT=\"24.57.124.99\";// this is just my local ip address, socket uses 3001 port on my app\nvar socket=socketIOClient(ENDPOINT);var Chat=/*#__PURE__*/function(_React$Component){_inherits(Chat,_React$Component);var _super=_createSuper(Chat);function Chat(props){var _this;_classCallCheck(this,Chat);_this=_super.call(this,props);_this.handleSubmit=function(e){e.preventDefault();var message=document.getElementById('message-input').value;var chatHistory=_this.state.messageHistory;chatHistory.push(/*#__PURE__*/React.createElement(\"div\",null,_this.props.username,\": \",message));_this.setState({messageHistory:chatHistory});socket.emit('send-chat-message',message);// gives everybody a message we sent\n_this.resetSubmit();};_this.resetSubmit=function(){document.getElementById('message-input').value='';};_this.state={messageHistory:[]// this is displayed as a div.\n};return _this;}_createClass(Chat,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;socket.emit('new-user',this.props.username);// tells everyone this user is here\nsocket.on('chat-message',function(data){// broadcasted message from someone\nvar chatHistory=_this2.state.messageHistory;chatHistory.push(/*#__PURE__*/React.createElement(\"div\",null,data.name,\": \",data.message));_this2.setState({messageHistory:chatHistory});});socket.on('disconnect-message',function(name){var chatHistory=_this2.state.messageHistory;chatHistory.push(/*#__PURE__*/React.createElement(\"div\",null,name,\" disconnected\"));_this2.setState({messageHistory:chatHistory});});socket.on('user-connected',function(username){// tells us when another connects\nvar chatHistory=_this2.state.messageHistory;chatHistory.push(/*#__PURE__*/React.createElement(\"div\",null,username,\" connected\"));_this2.setState({messageHistory:chatHistory});});}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){socket.emit('user-disconnecting',this.props.username);// tell everyone else when we disconnect\n}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"chat-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"message-container\",id:\"message-container\"},this.state.messageHistory),/*#__PURE__*/React.createElement(\"form\",{autoComplete:\"off\",className:\"send-container\",id:\"send-container\",onSubmit:function onSubmit(e){return _this3.handleSubmit(e);}},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",id:\"message-input\"})));}}]);return Chat;}(React.Component);export default Chat;","map":{"version":3,"sources":["/home/n/React/biscord/frontend/src/ChatPage/Chat.js"],"names":["React","socketIOClient","ENDPOINT","socket","Chat","props","handleSubmit","e","preventDefault","message","document","getElementById","value","chatHistory","state","messageHistory","push","username","setState","emit","resetSubmit","on","data","name","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport socketIOClient from 'socket.io-client';\nimport './Chat.css';\n\nconst ENDPOINT = \"24.57.124.99\";    // this is just my local ip address, socket uses 3001 port on my app\nconst socket = socketIOClient(ENDPOINT);\n\nclass Chat extends React.Component {\n \n    constructor(props)\n    {\n        super(props)\n        this.state = {\n            messageHistory: []      // this is displayed as a div.\n        }\n    }\n\n    componentDidMount() {\n        socket.emit('new-user', this.props.username);   // tells everyone this user is here\n    \n        socket.on('chat-message', data => { // broadcasted message from someone\n            let chatHistory = this.state.messageHistory;\n            chatHistory.push(<div>{data.name}: {data.message}</div>);\n            this.setState({ messageHistory: chatHistory });\n        });\n\n        socket.on('disconnect-message', name => {\n            let chatHistory = this.state.messageHistory;\n            chatHistory.push(<div>{name} disconnected</div>);\n            this.setState({ messageHistory: chatHistory });\n        })\n    \n        socket.on('user-connected', username => {   // tells us when another connects\n            let chatHistory = this.state.messageHistory;\n            chatHistory.push(<div>{username} connected</div>);\n            this.setState({ messageHistory: chatHistory });\n        });\n    }\n\n    componentWillUnmount()\n    {\n        socket.emit('user-disconnecting', this.props.username);  // tell everyone else when we disconnect\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        let message = document.getElementById('message-input').value;\n\n        let chatHistory = this.state.messageHistory;\n        chatHistory.push(<div>{this.props.username}: {message}</div>);\n        this.setState({ messageHistory: chatHistory });\n\n        socket.emit('send-chat-message', message)   // gives everybody a message we sent\n        this.resetSubmit();\n    }\n\n    resetSubmit = () => {\n        document.getElementById('message-input').value = '';\n    }\n\n    render()\n    {\n        return (\n            <div className=\"chat-container\">\n                <div className=\"message-container\" id=\"message-container\">{this.state.messageHistory}</div>\n                <form autoComplete=\"off\" className=\"send-container\" id=\"send-container\" onSubmit={(e) => this.handleSubmit(e)}>\n                    <input type=\"text\" id=\"message-input\"></input>\n                </form>\n            </div>\n        )\n    }\n\n}\n \nexport default Chat;"]},"metadata":{},"sourceType":"module"}