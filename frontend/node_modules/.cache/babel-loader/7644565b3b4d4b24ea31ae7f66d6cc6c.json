{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/home/n/React/I_Fucked_Something_Up/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/n/React/I_Fucked_Something_Up/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/home/n/React/I_Fucked_Something_Up/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/home/n/React/I_Fucked_Something_Up/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar Namespace = require('./namespace');\n\nvar count = 0;\n\nvar ParentNamespace = /*#__PURE__*/function (_Namespace) {\n  _inherits(ParentNamespace, _Namespace);\n\n  var _super = _createSuper(ParentNamespace);\n\n  function ParentNamespace(server) {\n    var _this;\n\n    _classCallCheck(this, ParentNamespace);\n\n    _this = _super.call(this, server, '/_' + count++);\n    _this.children = new Set();\n    return _this;\n  }\n\n  _createClass(ParentNamespace, [{\n    key: \"initAdapter\",\n    value: function initAdapter() {}\n  }, {\n    key: \"emit\",\n    value: function emit() {\n      var _this2 = this;\n\n      var args = Array.prototype.slice.call(arguments);\n      this.children.forEach(function (nsp) {\n        nsp.rooms = _this2.rooms;\n        nsp.flags = _this2.flags;\n        nsp.emit.apply(nsp, args);\n      });\n      this.rooms = [];\n      this.flags = {};\n    }\n  }, {\n    key: \"createChild\",\n    value: function createChild(name) {\n      var namespace = new Namespace(this.server, name);\n      namespace.fns = this.fns.slice(0);\n      this.listeners('connect').forEach(function (listener) {\n        return namespace.on('connect', listener);\n      });\n      this.listeners('connection').forEach(function (listener) {\n        return namespace.on('connection', listener);\n      });\n      this.children.add(namespace);\n      this.server.nsps[name] = namespace;\n      return namespace;\n    }\n  }]);\n\n  return ParentNamespace;\n}(Namespace);\n\nmodule.exports = ParentNamespace;","map":{"version":3,"sources":["/home/n/React/I_Fucked_Something_Up/frontend/node_modules/socket.io/lib/parent-namespace.js"],"names":["Namespace","require","count","ParentNamespace","server","children","Set","args","Array","prototype","slice","call","arguments","forEach","nsp","rooms","flags","emit","apply","name","namespace","fns","listeners","listener","on","add","nsps","module","exports"],"mappings":"AAAA;;;;;;;;;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AAEA,IAAIC,KAAK,GAAG,CAAZ;;IAEMC,e;;;;;AAEJ,2BAAYC,MAAZ,EAAoB;AAAA;;AAAA;;AAClB,8BAAMA,MAAN,EAAc,OAAQF,KAAK,EAA3B;AACA,UAAKG,QAAL,GAAgB,IAAIC,GAAJ,EAAhB;AAFkB;AAGnB;;;;kCAEa,CAAE;;;2BAET;AAAA;;AACL,UAAMC,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,CAAb;AAEA,WAAKP,QAAL,CAAcQ,OAAd,CAAsB,UAAAC,GAAG,EAAI;AAC3BA,QAAAA,GAAG,CAACC,KAAJ,GAAY,MAAI,CAACA,KAAjB;AACAD,QAAAA,GAAG,CAACE,KAAJ,GAAY,MAAI,CAACA,KAAjB;AACAF,QAAAA,GAAG,CAACG,IAAJ,CAASC,KAAT,CAAeJ,GAAf,EAAoBP,IAApB;AACD,OAJD;AAKA,WAAKQ,KAAL,GAAa,EAAb;AACA,WAAKC,KAAL,GAAa,EAAb;AACD;;;gCAEWG,I,EAAM;AAChB,UAAMC,SAAS,GAAG,IAAIpB,SAAJ,CAAc,KAAKI,MAAnB,EAA2Be,IAA3B,CAAlB;AACAC,MAAAA,SAAS,CAACC,GAAV,GAAgB,KAAKA,GAAL,CAASX,KAAT,CAAe,CAAf,CAAhB;AACA,WAAKY,SAAL,CAAe,SAAf,EAA0BT,OAA1B,CAAkC,UAAAU,QAAQ;AAAA,eAAIH,SAAS,CAACI,EAAV,CAAa,SAAb,EAAwBD,QAAxB,CAAJ;AAAA,OAA1C;AACA,WAAKD,SAAL,CAAe,YAAf,EAA6BT,OAA7B,CAAqC,UAAAU,QAAQ;AAAA,eAAIH,SAAS,CAACI,EAAV,CAAa,YAAb,EAA2BD,QAA3B,CAAJ;AAAA,OAA7C;AACA,WAAKlB,QAAL,CAAcoB,GAAd,CAAkBL,SAAlB;AACA,WAAKhB,MAAL,CAAYsB,IAAZ,CAAiBP,IAAjB,IAAyBC,SAAzB;AACA,aAAOA,SAAP;AACD;;;;EA7B2BpB,S;;AAgC9B2B,MAAM,CAACC,OAAP,GAAiBzB,eAAjB","sourcesContent":["'use strict';\n\nconst Namespace = require('./namespace');\n\nlet count = 0;\n\nclass ParentNamespace extends Namespace {\n\n  constructor(server) {\n    super(server, '/_' + (count++));\n    this.children = new Set();\n  }\n\n  initAdapter() {}\n\n  emit() {\n    const args = Array.prototype.slice.call(arguments);\n\n    this.children.forEach(nsp => {\n      nsp.rooms = this.rooms;\n      nsp.flags = this.flags;\n      nsp.emit.apply(nsp, args);\n    });\n    this.rooms = [];\n    this.flags = {};\n  }\n\n  createChild(name) {\n    const namespace = new Namespace(this.server, name);\n    namespace.fns = this.fns.slice(0);\n    this.listeners('connect').forEach(listener => namespace.on('connect', listener));\n    this.listeners('connection').forEach(listener => namespace.on('connection', listener));\n    this.children.add(namespace);\n    this.server.nsps[name] = namespace;\n    return namespace;\n  }\n}\n\nmodule.exports = ParentNamespace;\n"]},"metadata":{},"sourceType":"script"}