{"ast":null,"code":"\"use strict\";\n\nmodule.exports = exports = unpublish;\nexports.usage = 'Unpublishes pre-built binary (requires aws-sdk)';\n\nvar fs = require('fs');\n\nvar log = require('npmlog');\n\nvar versioning = require('./util/versioning.js');\n\nvar napi = require('./util/napi.js');\n\nvar s3_setup = require('./util/s3_setup.js');\n\nvar url = require('url');\n\nvar config = require('rc')(\"node_pre_gyp\", {\n  acl: \"public-read\"\n});\n\nfunction unpublish(gyp, argv, callback) {\n  var AWS = require(\"aws-sdk\");\n\n  var package_json = JSON.parse(fs.readFileSync('./package.json'));\n  var napi_build_version = napi.get_napi_build_version_from_command_args(argv);\n  var opts = versioning.evaluate(package_json, gyp.opts, napi_build_version);\n  s3_setup.detect(opts.hosted_path, config);\n  AWS.config.update(config);\n  var key_name = url.resolve(config.prefix, opts.package_name);\n  var s3 = new AWS.S3();\n  var s3_opts = {\n    Bucket: config.bucket,\n    Key: key_name\n  };\n  s3.headObject(s3_opts, function (err, meta) {\n    if (err && err.code == 'NotFound') {\n      console.log('[' + package_json.name + '] Not found: https://' + s3_opts.Bucket + '.s3.amazonaws.com/' + s3_opts.Key);\n      return callback();\n    } else if (err) {\n      return callback(err);\n    } else {\n      log.info('unpublish', JSON.stringify(meta));\n      s3.deleteObject(s3_opts, function (err, resp) {\n        if (err) return callback(err);\n        log.info(JSON.stringify(resp));\n        console.log('[' + package_json.name + '] Success: removed https://' + s3_opts.Bucket + '.s3.amazonaws.com/' + s3_opts.Key);\n        return callback();\n      });\n    }\n  });\n}","map":{"version":3,"sources":["/home/n/React/loginpagedemo/frontend/node_modules/node-pre-gyp/lib/unpublish.js"],"names":["module","exports","unpublish","usage","fs","require","log","versioning","napi","s3_setup","url","config","acl","gyp","argv","callback","AWS","package_json","JSON","parse","readFileSync","napi_build_version","get_napi_build_version_from_command_args","opts","evaluate","detect","hosted_path","update","key_name","resolve","prefix","package_name","s3","S3","s3_opts","Bucket","bucket","Key","headObject","err","meta","code","console","name","info","stringify","deleteObject","resp"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBA,OAAO,GAAGC,SAA3B;AAEAD,OAAO,CAACE,KAAR,GAAgB,iDAAhB;;AAEA,IAAIC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIC,GAAG,GAAGD,OAAO,CAAC,QAAD,CAAjB;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,sBAAD,CAAxB;;AACA,IAAIG,IAAI,GAAGH,OAAO,CAAC,gBAAD,CAAlB;;AACA,IAAII,QAAQ,GAAGJ,OAAO,CAAC,oBAAD,CAAtB;;AACA,IAAIK,GAAG,GAAGL,OAAO,CAAC,KAAD,CAAjB;;AACA,IAAIM,MAAM,GAAGN,OAAO,CAAC,IAAD,CAAP,CAAc,cAAd,EAA6B;AAACO,EAAAA,GAAG,EAAC;AAAL,CAA7B,CAAb;;AAEA,SAASV,SAAT,CAAmBW,GAAnB,EAAwBC,IAAxB,EAA8BC,QAA9B,EAAwC;AACpC,MAAIC,GAAG,GAAGX,OAAO,CAAC,SAAD,CAAjB;;AACA,MAAIY,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWf,EAAE,CAACgB,YAAH,CAAgB,gBAAhB,CAAX,CAAnB;AACA,MAAIC,kBAAkB,GAAGb,IAAI,CAACc,wCAAL,CAA8CR,IAA9C,CAAzB;AACA,MAAIS,IAAI,GAAGhB,UAAU,CAACiB,QAAX,CAAoBP,YAApB,EAAkCJ,GAAG,CAACU,IAAtC,EAA4CF,kBAA5C,CAAX;AACAZ,EAAAA,QAAQ,CAACgB,MAAT,CAAgBF,IAAI,CAACG,WAArB,EAAiCf,MAAjC;AACAK,EAAAA,GAAG,CAACL,MAAJ,CAAWgB,MAAX,CAAkBhB,MAAlB;AACA,MAAIiB,QAAQ,GAAGlB,GAAG,CAACmB,OAAJ,CAAYlB,MAAM,CAACmB,MAAnB,EAA0BP,IAAI,CAACQ,YAA/B,CAAf;AACA,MAAIC,EAAE,GAAI,IAAIhB,GAAG,CAACiB,EAAR,EAAV;AACA,MAAIC,OAAO,GAAG;AAAGC,IAAAA,MAAM,EAAExB,MAAM,CAACyB,MAAlB;AACGC,IAAAA,GAAG,EAAET;AADR,GAAd;AAGAI,EAAAA,EAAE,CAACM,UAAH,CAAcJ,OAAd,EAAuB,UAASK,GAAT,EAAcC,IAAd,EAAoB;AACvC,QAAID,GAAG,IAAIA,GAAG,CAACE,IAAJ,IAAY,UAAvB,EAAmC;AAC/BC,MAAAA,OAAO,CAACpC,GAAR,CAAY,MAAIW,YAAY,CAAC0B,IAAjB,GAAsB,uBAAtB,GAAgDT,OAAO,CAACC,MAAxD,GAAiE,oBAAjE,GAAwFD,OAAO,CAACG,GAA5G;AACA,aAAOtB,QAAQ,EAAf;AACH,KAHD,MAGO,IAAGwB,GAAH,EAAQ;AACX,aAAOxB,QAAQ,CAACwB,GAAD,CAAf;AACH,KAFM,MAEA;AACHjC,MAAAA,GAAG,CAACsC,IAAJ,CAAS,WAAT,EAAsB1B,IAAI,CAAC2B,SAAL,CAAeL,IAAf,CAAtB;AACAR,MAAAA,EAAE,CAACc,YAAH,CAAgBZ,OAAhB,EAAyB,UAASK,GAAT,EAAcQ,IAAd,EAAoB;AACzC,YAAIR,GAAJ,EAAS,OAAOxB,QAAQ,CAACwB,GAAD,CAAf;AACTjC,QAAAA,GAAG,CAACsC,IAAJ,CAAS1B,IAAI,CAAC2B,SAAL,CAAeE,IAAf,CAAT;AACAL,QAAAA,OAAO,CAACpC,GAAR,CAAY,MAAIW,YAAY,CAAC0B,IAAjB,GAAsB,6BAAtB,GAAsDT,OAAO,CAACC,MAA9D,GAAuE,oBAAvE,GAA8FD,OAAO,CAACG,GAAlH;AACA,eAAOtB,QAAQ,EAAf;AACH,OALD;AAMH;AACJ,GAfD;AAgBH","sourcesContent":["\"use strict\";\n\nmodule.exports = exports = unpublish;\n\nexports.usage = 'Unpublishes pre-built binary (requires aws-sdk)';\n\nvar fs = require('fs');\nvar log = require('npmlog');\nvar versioning = require('./util/versioning.js');\nvar napi = require('./util/napi.js');\nvar s3_setup = require('./util/s3_setup.js');\nvar url = require('url');\nvar config = require('rc')(\"node_pre_gyp\",{acl:\"public-read\"});\n\nfunction unpublish(gyp, argv, callback) {\n    var AWS = require(\"aws-sdk\");\n    var package_json = JSON.parse(fs.readFileSync('./package.json'));\n    var napi_build_version = napi.get_napi_build_version_from_command_args(argv);\n    var opts = versioning.evaluate(package_json, gyp.opts, napi_build_version);\n    s3_setup.detect(opts.hosted_path,config);\n    AWS.config.update(config);\n    var key_name = url.resolve(config.prefix,opts.package_name);\n    var s3 =  new AWS.S3();\n    var s3_opts = {  Bucket: config.bucket,\n                     Key: key_name\n                  };\n    s3.headObject(s3_opts, function(err, meta) {\n        if (err && err.code == 'NotFound') {\n            console.log('['+package_json.name+'] Not found: https://' + s3_opts.Bucket + '.s3.amazonaws.com/' + s3_opts.Key);\n            return callback();\n        } else if(err) {\n            return callback(err);\n        } else {\n            log.info('unpublish', JSON.stringify(meta));\n            s3.deleteObject(s3_opts, function(err, resp) {\n                if (err) return callback(err);\n                log.info(JSON.stringify(resp));\n                console.log('['+package_json.name+'] Success: removed https://' + s3_opts.Bucket + '.s3.amazonaws.com/' + s3_opts.Key);\n                return callback();\n            });\n        }\n    });\n}\n"]},"metadata":{},"sourceType":"script"}