{"ast":null,"code":"\"use strict\";\n\nmodule.exports = exports = clean;\nexports.usage = 'Removes the entire folder containing the compiled .node module';\n\nvar fs = require('fs');\n\nvar rm = require('rimraf');\n\nvar exists = require('fs').exists || require('path').exists;\n\nvar versioning = require('./util/versioning.js');\n\nvar napi = require('./util/napi.js');\n\nvar path = require('path');\n\nfunction clean(gyp, argv, callback) {\n  var package_json = JSON.parse(fs.readFileSync('./package.json'));\n  var napi_build_version = napi.get_napi_build_version_from_command_args(argv);\n  var opts = versioning.evaluate(package_json, gyp.opts, napi_build_version);\n  var to_delete = opts.module_path;\n\n  if (!to_delete) {\n    return callback(new Error(\"module_path is empty, refusing to delete\"));\n  } else if (path.normalize(to_delete) == path.normalize(process.cwd())) {\n    return callback(new Error(\"module_path is not set, refusing to delete\"));\n  } else {\n    exists(to_delete, function (found) {\n      if (found) {\n        if (!gyp.opts.silent_clean) console.log('[' + package_json.name + '] Removing \"%s\"', to_delete);\n        return rm(to_delete, callback);\n      }\n\n      return callback();\n    });\n  }\n}","map":{"version":3,"sources":["/home/n/React/loginpagedemo/frontend/node_modules/node-pre-gyp/lib/clean.js"],"names":["module","exports","clean","usage","fs","require","rm","exists","versioning","napi","path","gyp","argv","callback","package_json","JSON","parse","readFileSync","napi_build_version","get_napi_build_version_from_command_args","opts","evaluate","to_delete","module_path","Error","normalize","process","cwd","found","silent_clean","console","log","name"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBA,OAAO,GAAGC,KAA3B;AAEAD,OAAO,CAACE,KAAR,GAAgB,gEAAhB;;AAEA,IAAIC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIC,EAAE,GAAGD,OAAO,CAAC,QAAD,CAAhB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,IAAD,CAAP,CAAcE,MAAd,IAAwBF,OAAO,CAAC,MAAD,CAAP,CAAgBE,MAArD;;AACA,IAAIC,UAAU,GAAGH,OAAO,CAAC,sBAAD,CAAxB;;AACA,IAAII,IAAI,GAAGJ,OAAO,CAAC,gBAAD,CAAlB;;AACA,IAAIK,IAAI,GAAGL,OAAO,CAAC,MAAD,CAAlB;;AAEA,SAASH,KAAT,CAAgBS,GAAhB,EAAqBC,IAArB,EAA2BC,QAA3B,EAAqC;AACjC,MAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWZ,EAAE,CAACa,YAAH,CAAgB,gBAAhB,CAAX,CAAnB;AACA,MAAIC,kBAAkB,GAAGT,IAAI,CAACU,wCAAL,CAA8CP,IAA9C,CAAzB;AACA,MAAIQ,IAAI,GAAGZ,UAAU,CAACa,QAAX,CAAoBP,YAApB,EAAkCH,GAAG,CAACS,IAAtC,EAA4CF,kBAA5C,CAAX;AACA,MAAII,SAAS,GAAGF,IAAI,CAACG,WAArB;;AACA,MAAI,CAACD,SAAL,EAAgB;AACZ,WAAOT,QAAQ,CAAC,IAAIW,KAAJ,CAAU,0CAAV,CAAD,CAAf;AACH,GAFD,MAEO,IAAId,IAAI,CAACe,SAAL,CAAeH,SAAf,KAA6BZ,IAAI,CAACe,SAAL,CAAeC,OAAO,CAACC,GAAR,EAAf,CAAjC,EAAgE;AACnE,WAAOd,QAAQ,CAAC,IAAIW,KAAJ,CAAU,4CAAV,CAAD,CAAf;AACH,GAFM,MAEA;AACHjB,IAAAA,MAAM,CAACe,SAAD,EAAY,UAASM,KAAT,EAAgB;AAC9B,UAAIA,KAAJ,EAAW;AACP,YAAI,CAACjB,GAAG,CAACS,IAAJ,CAASS,YAAd,EAA4BC,OAAO,CAACC,GAAR,CAAY,MAAIjB,YAAY,CAACkB,IAAjB,GAAsB,iBAAlC,EAAqDV,SAArD;AAC5B,eAAOhB,EAAE,CAACgB,SAAD,EAAYT,QAAZ,CAAT;AACH;;AACD,aAAOA,QAAQ,EAAf;AACH,KANK,CAAN;AAOH;AACJ","sourcesContent":["\"use strict\";\n\nmodule.exports = exports = clean;\n\nexports.usage = 'Removes the entire folder containing the compiled .node module';\n\nvar fs = require('fs');\nvar rm = require('rimraf');\nvar exists = require('fs').exists || require('path').exists;\nvar versioning = require('./util/versioning.js');\nvar napi = require('./util/napi.js');\nvar path = require('path');\n\nfunction clean (gyp, argv, callback) {\n    var package_json = JSON.parse(fs.readFileSync('./package.json'));\n    var napi_build_version = napi.get_napi_build_version_from_command_args(argv);\n    var opts = versioning.evaluate(package_json, gyp.opts, napi_build_version);\n    var to_delete = opts.module_path;\n    if (!to_delete) {\n        return callback(new Error(\"module_path is empty, refusing to delete\"));\n    } else if (path.normalize(to_delete) == path.normalize(process.cwd())) {\n        return callback(new Error(\"module_path is not set, refusing to delete\"));\n    } else {\n        exists(to_delete, function(found) {\n            if (found) {\n                if (!gyp.opts.silent_clean) console.log('['+package_json.name+'] Removing \"%s\"', to_delete);\n                return rm(to_delete, callback);\n            }\n            return callback();\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"script"}