{"ast":null,"code":"var _jsxFileName = \"/home/n/React/biscord/frontend/src/ChatPage/Chat.js\";\nimport React from 'react';\nimport socketIOClient from 'socket.io-client';\nconst ENDPOINT = \"http://localhost:3001\";\n;\nconst socket = socketIOClient(ENDPOINT);\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let message = document.getElementById('message-input').value;\n      let chatHistory = this.state.messageHistory;\n      chatHistory.push( /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 26\n        }\n      }, this.props.username, \": \", message));\n      this.setState({\n        messageHistory: chatHistory\n      });\n      socket.emit('send-chat-message', message);\n    };\n\n    this.state = {\n      messageHistory: []\n    };\n  }\n\n  componentDidMount() {\n    socket.emit('new-user', this.props.username);\n    socket.on('chat-message', data => {\n      let chatHistory = this.state.messageHistory;\n      chatHistory.push( /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 30\n        }\n      }, data.name, \": \", data.message));\n      this.setState({\n        messageHistory: chatHistory\n      });\n    });\n    socket.on('user-connected', username => {\n      let chatHistory = this.state.messageHistory;\n      chatHistory.push( /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 30\n        }\n      }, username, \" connected\"));\n      this.setState({\n        messageHistory: chatHistory\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"message-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, this.state.messageHistory), /*#__PURE__*/React.createElement(\"form\", {\n      id: \"send-container\",\n      onSubmit: e => this.handleSubmit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"message-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      id: \"send-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, \"Send\")));\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["/home/n/React/biscord/frontend/src/ChatPage/Chat.js"],"names":["React","socketIOClient","ENDPOINT","socket","Chat","Component","constructor","props","handleSubmit","e","preventDefault","message","document","getElementById","value","chatHistory","state","messageHistory","push","username","setState","emit","componentDidMount","on","data","name","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,MAAMC,QAAQ,GAAG,uBAAjB;AAA0C;AAC1C,MAAMC,MAAM,GAAGF,cAAc,CAACC,QAAD,CAA7B;;AAEA,MAAME,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAmC;AAE/BC,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;;AADJ,SAuBAC,YAvBA,GAuBgBC,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAIC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,KAAvD;AAEA,UAAIC,WAAW,GAAG,KAAKC,KAAL,CAAWC,cAA7B;AACAF,MAAAA,WAAW,CAACG,IAAZ,eAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKX,KAAL,CAAWY,QAAjB,QAA6BR,OAA7B,CAAjB;AACA,WAAKS,QAAL,CAAc;AAAEH,QAAAA,cAAc,EAAEF;AAAlB,OAAd;AAEAZ,MAAAA,MAAM,CAACkB,IAAP,CAAY,mBAAZ,EAAiCV,OAAjC;AACH,KAhCD;;AAEI,SAAKK,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAE;AADP,KAAb;AAGH;;AAEDK,EAAAA,iBAAiB,GAAG;AAChBnB,IAAAA,MAAM,CAACkB,IAAP,CAAY,UAAZ,EAAwB,KAAKd,KAAL,CAAWY,QAAnC;AAEAhB,IAAAA,MAAM,CAACoB,EAAP,CAAU,cAAV,EAA0BC,IAAI,IAAI;AAC9B,UAAIT,WAAW,GAAG,KAAKC,KAAL,CAAWC,cAA7B;AACAF,MAAAA,WAAW,CAACG,IAAZ,eAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMM,IAAI,CAACC,IAAX,QAAmBD,IAAI,CAACb,OAAxB,CAAjB;AACA,WAAKS,QAAL,CAAc;AAAEH,QAAAA,cAAc,EAAEF;AAAlB,OAAd;AACH,KAJD;AAMAZ,IAAAA,MAAM,CAACoB,EAAP,CAAU,gBAAV,EAA4BJ,QAAQ,IAAI;AACpC,UAAIJ,WAAW,GAAG,KAAKC,KAAL,CAAWC,cAA7B;AACAF,MAAAA,WAAW,CAACG,IAAZ,eAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMC,QAAN,eAAjB;AACA,WAAKC,QAAL,CAAc;AAAEH,QAAAA,cAAc,EAAEF;AAAlB,OAAd;AACH,KAJD;AAKH;;AAaDW,EAAAA,MAAM,GACN;AACI,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,EAAE,EAAC,mBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6B,KAAKV,KAAL,CAAWC,cAAxC,CADJ,eAEI;AAAM,MAAA,EAAE,EAAC,gBAAT;AAA0B,MAAA,QAAQ,EAAGR,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,EAAE,EAAC,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CAFJ,CADJ;AASH;;AAhD8B;;AAoDnC,eAAeL,IAAf","sourcesContent":["import React from 'react';\nimport socketIOClient from 'socket.io-client';\nconst ENDPOINT = \"http://localhost:3001\"; ;\nconst socket = socketIOClient(ENDPOINT);\n\nclass Chat extends React.Component {\n \n    constructor(props)\n    {\n        super(props)\n        this.state = {\n            messageHistory: []\n        }\n    }\n\n    componentDidMount() {\n        socket.emit('new-user', this.props.username);\n    \n        socket.on('chat-message', data => {\n            let chatHistory = this.state.messageHistory;\n            chatHistory.push(<div>{data.name}: {data.message}</div>);\n            this.setState({ messageHistory: chatHistory });\n        });\n    \n        socket.on('user-connected', username => {\n            let chatHistory = this.state.messageHistory;\n            chatHistory.push(<div>{username} connected</div>);\n            this.setState({ messageHistory: chatHistory });\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        let message = document.getElementById('message-input').value;\n\n        let chatHistory = this.state.messageHistory;\n        chatHistory.push(<div>{this.props.username}: {message}</div>);\n        this.setState({ messageHistory: chatHistory });\n\n        socket.emit('send-chat-message', message)\n    }\n\n    render()\n    {\n        return (\n            <div>\n                <div id=\"message-container\">{this.state.messageHistory}</div>\n                <form id=\"send-container\" onSubmit={(e) => this.handleSubmit(e)}>\n                    <input type=\"text\" id=\"message-input\"></input>\n                    <button type=\"submit\" id=\"send-button\">Send</button>\n                </form>\n            </div>\n        )\n    }\n\n}\n \nexport default Chat;"]},"metadata":{},"sourceType":"module"}