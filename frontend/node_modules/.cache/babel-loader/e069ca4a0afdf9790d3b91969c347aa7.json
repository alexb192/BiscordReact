{"ast":null,"code":"\"use strict\";\n\nmodule.exports = exports = rebuild;\nexports.usage = 'Runs \"clean\" and \"build\" at once';\n\nvar fs = require('fs');\n\nvar napi = require('./util/napi.js');\n\nfunction rebuild(gyp, argv, callback) {\n  var package_json = JSON.parse(fs.readFileSync('./package.json'));\n  var commands = [{\n    name: 'clean',\n    args: []\n  }, {\n    name: 'build',\n    args: ['rebuild']\n  }];\n  commands = napi.expand_commands(package_json, gyp.opts, commands);\n\n  for (var i = commands.length; i !== 0; i--) {\n    gyp.todo.unshift(commands[i - 1]);\n  }\n\n  process.nextTick(callback);\n}","map":{"version":3,"sources":["/home/n/React/loginpagedemo/frontend/node_modules/node-pre-gyp/lib/rebuild.js"],"names":["module","exports","rebuild","usage","fs","require","napi","gyp","argv","callback","package_json","JSON","parse","readFileSync","commands","name","args","expand_commands","opts","i","length","todo","unshift","process","nextTick"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBA,OAAO,GAAGC,OAA3B;AAEAD,OAAO,CAACE,KAAR,GAAgB,kCAAhB;;AAEA,IAAIC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,gBAAD,CAAlB;;AAEA,SAASH,OAAT,CAAkBK,GAAlB,EAAuBC,IAAvB,EAA6BC,QAA7B,EAAuC;AACrC,MAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWR,EAAE,CAACS,YAAH,CAAgB,gBAAhB,CAAX,CAAnB;AACA,MAAIC,QAAQ,GAAG,CACb;AAAEC,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,IAAI,EAAE;AAAvB,GADa,EAEb;AAAED,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,IAAI,EAAE,CAAC,SAAD;AAAvB,GAFa,CAAf;AAIAF,EAAAA,QAAQ,GAAGR,IAAI,CAACW,eAAL,CAAqBP,YAArB,EAAmCH,GAAG,CAACW,IAAvC,EAA6CJ,QAA7C,CAAX;;AACA,OAAK,IAAIK,CAAC,GAAGL,QAAQ,CAACM,MAAtB,EAA8BD,CAAC,KAAK,CAApC,EAAuCA,CAAC,EAAxC,EAA4C;AAC1CZ,IAAAA,GAAG,CAACc,IAAJ,CAASC,OAAT,CAAiBR,QAAQ,CAACK,CAAC,GAAC,CAAH,CAAzB;AACD;;AACDI,EAAAA,OAAO,CAACC,QAAR,CAAiBf,QAAjB;AACD","sourcesContent":["\"use strict\";\n\nmodule.exports = exports = rebuild;\n\nexports.usage = 'Runs \"clean\" and \"build\" at once';\n\nvar fs = require('fs');\nvar napi = require('./util/napi.js');\n\nfunction rebuild (gyp, argv, callback) {\n  var package_json = JSON.parse(fs.readFileSync('./package.json'));\n  var commands = [\n    { name: 'clean', args: [] },\n    { name: 'build', args: ['rebuild'] }\n    ];\n  commands = napi.expand_commands(package_json, gyp.opts, commands);\n  for (var i = commands.length; i !== 0; i--) {\n    gyp.todo.unshift(commands[i-1]);\n  }\n  process.nextTick(callback);\n}\n"]},"metadata":{},"sourceType":"script"}