{"ast":null,"code":"\"use strict\";\n\nvar fs = require('fs');\n\nmodule.exports = exports;\nvar versionArray = process.version.substr(1).replace(/-.*$/, '').split('.').map(function (item) {\n  return +item;\n});\nvar napi_multiple_commands = ['build', 'clean', 'configure', 'package', 'publish', 'reveal', 'testbinary', 'testpackage', 'unpublish'];\nvar napi_build_version_tag = 'napi_build_version=';\n\nmodule.exports.get_napi_version = function (target) {\n  // target may be undefined\n  // returns the non-zero numeric napi version or undefined if napi is not supported.\n  // correctly supporting target requires an updated cross-walk\n  var version = process.versions.napi; // can be undefined\n\n  if (!version) {\n    // this code should never need to be updated\n    if (versionArray[0] === 9 && versionArray[1] >= 3) version = 2; // 9.3.0+\n    else if (versionArray[0] === 8) version = 1; // 8.0.0+\n  }\n\n  return version;\n};\n\nmodule.exports.get_napi_version_as_string = function (target) {\n  // returns the napi version as a string or an empty string if napi is not supported.\n  var version = module.exports.get_napi_version(target);\n  return version ? '' + version : '';\n};\n\nmodule.exports.validate_package_json = function (package_json, opts) {\n  // throws Error\n  var binary = package_json.binary;\n  var module_path_ok = pathOK(binary.module_path);\n  var remote_path_ok = pathOK(binary.remote_path);\n  var package_name_ok = pathOK(binary.package_name);\n  var napi_build_versions = module.exports.get_napi_build_versions(package_json, opts, true);\n  var napi_build_versions_raw = module.exports.get_napi_build_versions_raw(package_json);\n\n  if (napi_build_versions) {\n    napi_build_versions.forEach(function (napi_build_version) {\n      if (!(parseInt(napi_build_version, 10) === napi_build_version && napi_build_version > 0)) {\n        throw new Error(\"All values specified in napi_versions must be positive integers.\");\n      }\n    });\n  }\n\n  if (napi_build_versions && (!module_path_ok || !remote_path_ok && !package_name_ok)) {\n    throw new Error(\"When napi_versions is specified; module_path and either remote_path or \" + \"package_name must contain the substitution string '{napi_build_version}`.\");\n  }\n\n  if ((module_path_ok || remote_path_ok || package_name_ok) && !napi_build_versions_raw) {\n    throw new Error(\"When the substitution string '{napi_build_version}` is specified in \" + \"module_path, remote_path, or package_name; napi_versions must also be specified.\");\n  }\n\n  if (napi_build_versions && !module.exports.get_best_napi_build_version(package_json, opts) && module.exports.build_napi_only(package_json)) {\n    throw new Error('The N-API version of this Node instance is ' + module.exports.get_napi_version(opts ? opts.target : undefined) + '. ' + 'This module supports N-API version(s) ' + module.exports.get_napi_build_versions_raw(package_json) + '. ' + 'This Node instance cannot run this module.');\n  }\n\n  if (napi_build_versions_raw && !napi_build_versions && module.exports.build_napi_only(package_json)) {\n    throw new Error('The N-API version of this Node instance is ' + module.exports.get_napi_version(opts ? opts.target : undefined) + '. ' + 'This module supports N-API version(s) ' + module.exports.get_napi_build_versions_raw(package_json) + '. ' + 'This Node instance cannot run this module.');\n  }\n};\n\nfunction pathOK(path) {\n  return path && (path.indexOf('{napi_build_version}') !== -1 || path.indexOf('{node_napi_label}') !== -1);\n}\n\nmodule.exports.expand_commands = function (package_json, opts, commands) {\n  var expanded_commands = [];\n  var napi_build_versions = module.exports.get_napi_build_versions(package_json, opts);\n  commands.forEach(function (command) {\n    if (napi_build_versions && command.name === 'install') {\n      var napi_build_version = module.exports.get_best_napi_build_version(package_json, opts);\n      var args = napi_build_version ? [napi_build_version_tag + napi_build_version] : [];\n      expanded_commands.push({\n        name: command.name,\n        args: args\n      });\n    } else if (napi_build_versions && napi_multiple_commands.indexOf(command.name) !== -1) {\n      napi_build_versions.forEach(function (napi_build_version) {\n        var args = command.args.slice();\n        args.push(napi_build_version_tag + napi_build_version);\n        expanded_commands.push({\n          name: command.name,\n          args: args\n        });\n      });\n    } else {\n      expanded_commands.push(command);\n    }\n  });\n  return expanded_commands;\n};\n\nmodule.exports.get_napi_build_versions = function (package_json, opts, warnings) {\n  // opts may be undefined\n  var log = require('npmlog');\n\n  var napi_build_versions = [];\n  var supported_napi_version = module.exports.get_napi_version(opts ? opts.target : undefined); // remove duplicates, verify each napi version can actaully be built\n\n  if (package_json.binary && package_json.binary.napi_versions) {\n    package_json.binary.napi_versions.forEach(function (napi_version) {\n      var duplicated = napi_build_versions.indexOf(napi_version) !== -1;\n\n      if (!duplicated && supported_napi_version && napi_version <= supported_napi_version) {\n        napi_build_versions.push(napi_version);\n      } else if (warnings && !duplicated && supported_napi_version) {\n        log.info('This Node instance does not support builds for N-API version', napi_version);\n      }\n    });\n  }\n\n  if (opts && opts[\"build-latest-napi-version-only\"]) {\n    var latest_version = 0;\n    napi_build_versions.forEach(function (napi_version) {\n      if (napi_version > latest_version) latest_version = napi_version;\n    });\n    napi_build_versions = latest_version ? [latest_version] : [];\n  }\n\n  return napi_build_versions.length ? napi_build_versions : undefined;\n};\n\nmodule.exports.get_napi_build_versions_raw = function (package_json) {\n  var napi_build_versions = []; // remove duplicates\n\n  if (package_json.binary && package_json.binary.napi_versions) {\n    package_json.binary.napi_versions.forEach(function (napi_version) {\n      if (napi_build_versions.indexOf(napi_version) === -1) {\n        napi_build_versions.push(napi_version);\n      }\n    });\n  }\n\n  return napi_build_versions.length ? napi_build_versions : undefined;\n};\n\nmodule.exports.get_command_arg = function (napi_build_version) {\n  return napi_build_version_tag + napi_build_version;\n};\n\nmodule.exports.get_napi_build_version_from_command_args = function (command_args) {\n  for (var i = 0; i < command_args.length; i++) {\n    var arg = command_args[i];\n\n    if (arg.indexOf(napi_build_version_tag) === 0) {\n      return parseInt(arg.substr(napi_build_version_tag.length), 10);\n    }\n  }\n\n  return undefined;\n};\n\nmodule.exports.swap_build_dir_out = function (napi_build_version) {\n  if (napi_build_version) {\n    var rm = require('rimraf');\n\n    rm.sync(module.exports.get_build_dir(napi_build_version));\n    fs.renameSync('build', module.exports.get_build_dir(napi_build_version));\n  }\n};\n\nmodule.exports.swap_build_dir_in = function (napi_build_version) {\n  if (napi_build_version) {\n    var rm = require('rimraf');\n\n    rm.sync('build');\n    fs.renameSync(module.exports.get_build_dir(napi_build_version), 'build');\n  }\n};\n\nmodule.exports.get_build_dir = function (napi_build_version) {\n  return 'build-tmp-napi-v' + napi_build_version;\n};\n\nmodule.exports.get_best_napi_build_version = function (package_json, opts) {\n  var best_napi_build_version = 0;\n  var napi_build_versions = module.exports.get_napi_build_versions(package_json, opts);\n\n  if (napi_build_versions) {\n    var our_napi_version = module.exports.get_napi_version(opts ? opts.target : undefined);\n    napi_build_versions.forEach(function (napi_build_version) {\n      if (napi_build_version > best_napi_build_version && napi_build_version <= our_napi_version) {\n        best_napi_build_version = napi_build_version;\n      }\n    });\n  }\n\n  return best_napi_build_version === 0 ? undefined : best_napi_build_version;\n};\n\nmodule.exports.build_napi_only = function (package_json) {\n  return package_json.binary && package_json.binary.package_name && package_json.binary.package_name.indexOf('{node_napi_label}') === -1;\n};","map":{"version":3,"sources":["/home/n/React/loginpagedemo/frontend/node_modules/node-pre-gyp/lib/util/napi.js"],"names":["fs","require","module","exports","versionArray","process","version","substr","replace","split","map","item","napi_multiple_commands","napi_build_version_tag","get_napi_version","target","versions","napi","get_napi_version_as_string","validate_package_json","package_json","opts","binary","module_path_ok","pathOK","module_path","remote_path_ok","remote_path","package_name_ok","package_name","napi_build_versions","get_napi_build_versions","napi_build_versions_raw","get_napi_build_versions_raw","forEach","napi_build_version","parseInt","Error","get_best_napi_build_version","build_napi_only","undefined","path","indexOf","expand_commands","commands","expanded_commands","command","name","args","push","slice","warnings","log","supported_napi_version","napi_versions","napi_version","duplicated","info","latest_version","length","get_command_arg","get_napi_build_version_from_command_args","command_args","i","arg","swap_build_dir_out","rm","sync","get_build_dir","renameSync","swap_build_dir_in","best_napi_build_version","our_napi_version"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar fs = require('fs');\n\nmodule.exports = exports;\n\nvar versionArray = process.version\n\t.substr(1)\n\t.replace(/-.*$/, '')\n\t.split('.')\n\t.map(function(item) {\n\t\treturn +item;\n\t});\n\nvar napi_multiple_commands = [\n\t'build',\n\t'clean',\n\t'configure',\n\t'package',\n\t'publish',\n\t'reveal',\n\t'testbinary',\n\t'testpackage',\n\t'unpublish'\n];\n\nvar napi_build_version_tag = 'napi_build_version=';\n\nmodule.exports.get_napi_version = function(target) { // target may be undefined\n\t// returns the non-zero numeric napi version or undefined if napi is not supported.\n\t// correctly supporting target requires an updated cross-walk\n\tvar version = process.versions.napi; // can be undefined\n\tif (!version) { // this code should never need to be updated\n\t\tif (versionArray[0] === 9 && versionArray[1] >= 3) version = 2; // 9.3.0+\n\t\telse if (versionArray[0] === 8) version = 1; // 8.0.0+\n\t}\n\treturn version;\n};\n\nmodule.exports.get_napi_version_as_string = function(target) {\n\t// returns the napi version as a string or an empty string if napi is not supported.\n\tvar version = module.exports.get_napi_version(target);\n\treturn version ? ''+version : '';\n};\n\nmodule.exports.validate_package_json = function(package_json, opts) { // throws Error\n\n\tvar binary = package_json.binary;\n\tvar module_path_ok = pathOK(binary.module_path);\n\tvar remote_path_ok = pathOK(binary.remote_path);\n\tvar package_name_ok = pathOK(binary.package_name);\n\tvar napi_build_versions = module.exports.get_napi_build_versions(package_json,opts,true);\n\tvar napi_build_versions_raw = module.exports.get_napi_build_versions_raw(package_json);\n\n\tif (napi_build_versions) {\n\t\tnapi_build_versions.forEach(function(napi_build_version){\n\t\t\tif (!(parseInt(napi_build_version,10) === napi_build_version && napi_build_version > 0)) {\n\t\t\t\tthrow new Error(\"All values specified in napi_versions must be positive integers.\");\n\t\t\t}\n\t\t});\n\t}\n\n\tif (napi_build_versions && (!module_path_ok || (!remote_path_ok && !package_name_ok))) {\n\t\tthrow new Error(\"When napi_versions is specified; module_path and either remote_path or \" +\n\t\t\t\"package_name must contain the substitution string '{napi_build_version}`.\");\n\t}\n\n\tif ((module_path_ok || remote_path_ok || package_name_ok) && !napi_build_versions_raw) {\n\t\tthrow new Error(\"When the substitution string '{napi_build_version}` is specified in \" +\n\t\t\t\"module_path, remote_path, or package_name; napi_versions must also be specified.\");\n\t}\n\n\tif (napi_build_versions && !module.exports.get_best_napi_build_version(package_json, opts) && \n\tmodule.exports.build_napi_only(package_json)) {\n\t\tthrow new Error(\n\t\t\t'The N-API version of this Node instance is ' + module.exports.get_napi_version(opts ? opts.target : undefined) + '. ' +\n\t\t\t'This module supports N-API version(s) ' + module.exports.get_napi_build_versions_raw(package_json) + '. ' +\n\t\t\t'This Node instance cannot run this module.');\n\t}\n\n\tif (napi_build_versions_raw && !napi_build_versions && module.exports.build_napi_only(package_json)) {\n\t\tthrow new Error(\n\t\t\t'The N-API version of this Node instance is ' + module.exports.get_napi_version(opts ? opts.target : undefined) + '. ' +\n\t\t\t'This module supports N-API version(s) ' + module.exports.get_napi_build_versions_raw(package_json) + '. ' +\n\t\t\t'This Node instance cannot run this module.');\n\t}\n\n};\n\nfunction pathOK (path) {\n\treturn path && (path.indexOf('{napi_build_version}') !== -1 || path.indexOf('{node_napi_label}') !== -1);\n}\n\nmodule.exports.expand_commands = function(package_json, opts, commands) {\n\tvar expanded_commands = [];\n\tvar napi_build_versions = module.exports.get_napi_build_versions(package_json, opts);\n\tcommands.forEach(function(command){\n\t\tif (napi_build_versions && command.name === 'install') {\n\t\t\tvar napi_build_version = module.exports.get_best_napi_build_version(package_json, opts);\n\t\t\tvar args = napi_build_version ? [ napi_build_version_tag+napi_build_version ] : [ ];\n\t\t\texpanded_commands.push ({ name: command.name, args: args });\n\t\t} else if (napi_build_versions && napi_multiple_commands.indexOf(command.name) !== -1) {\n\t\t\tnapi_build_versions.forEach(function(napi_build_version){\n\t\t\t\tvar args = command.args.slice();\n\t\t\t\targs.push (napi_build_version_tag+napi_build_version);\n\t\t\t\texpanded_commands.push ({ name: command.name, args: args });\n\t\t\t});\n\t\t} else {\n\t\t\texpanded_commands.push (command);\n\t\t}\n\t});\n\treturn expanded_commands;\n};\n\nmodule.exports.get_napi_build_versions = function(package_json, opts, warnings) { // opts may be undefined\n\tvar log = require('npmlog');\n\tvar napi_build_versions = [];\n\tvar supported_napi_version = module.exports.get_napi_version(opts ? opts.target : undefined);\n\t// remove duplicates, verify each napi version can actaully be built\n\tif (package_json.binary && package_json.binary.napi_versions) {\n\t\tpackage_json.binary.napi_versions.forEach(function(napi_version) {\n\t\t\tvar duplicated = napi_build_versions.indexOf(napi_version) !== -1;\n\t\t\tif (!duplicated && supported_napi_version && napi_version <= supported_napi_version) {\n\t\t\t\tnapi_build_versions.push(napi_version);\n\t\t\t} else if (warnings && !duplicated && supported_napi_version) {\n\t\t\t\tlog.info('This Node instance does not support builds for N-API version', napi_version);\n\t\t\t}\n\t\t});\n\t}\n\tif (opts && opts[\"build-latest-napi-version-only\"]) {\n\t\tvar latest_version = 0;\n\t\tnapi_build_versions.forEach(function(napi_version) {\n\t\t\tif (napi_version > latest_version) latest_version = napi_version;\n\t\t});\n\t\tnapi_build_versions = latest_version ? [ latest_version ] : [];\n\t}\n\treturn napi_build_versions.length ? napi_build_versions : undefined;\n};\n\nmodule.exports.get_napi_build_versions_raw = function(package_json) {\n\tvar napi_build_versions = [];\n\t// remove duplicates\n\tif (package_json.binary && package_json.binary.napi_versions) {\n\t\tpackage_json.binary.napi_versions.forEach(function(napi_version) {\n\t\t\tif (napi_build_versions.indexOf(napi_version) === -1) {\n\t\t\t\tnapi_build_versions.push(napi_version);\n\t\t\t}\n\t\t});\n\t}\n\treturn napi_build_versions.length ? napi_build_versions : undefined;\n};\n\nmodule.exports.get_command_arg = function(napi_build_version) {\n\treturn napi_build_version_tag + napi_build_version;\n};\n\nmodule.exports.get_napi_build_version_from_command_args = function(command_args) {\n\tfor (var i = 0; i < command_args.length; i++) {\n\t\tvar arg = command_args[i];\n\t\tif (arg.indexOf(napi_build_version_tag) === 0) {\n\t\t\treturn parseInt(arg.substr(napi_build_version_tag.length),10);\n\t\t}\n\t}\n\treturn undefined;\n};\n\nmodule.exports.swap_build_dir_out = function(napi_build_version) {\n\tif (napi_build_version) {\n\t\tvar rm = require('rimraf');\n\t\trm.sync(module.exports.get_build_dir(napi_build_version));\n\t\tfs.renameSync('build', module.exports.get_build_dir(napi_build_version));\n\t}\n};\n\nmodule.exports.swap_build_dir_in = function(napi_build_version) {\n\tif (napi_build_version) {\n\t\tvar rm = require('rimraf');\n\t\trm.sync('build');\n\t\tfs.renameSync(module.exports.get_build_dir(napi_build_version), 'build');\n\t}\n};\n\nmodule.exports.get_build_dir = function(napi_build_version) {\n\treturn 'build-tmp-napi-v'+napi_build_version;\n};\n\nmodule.exports.get_best_napi_build_version = function(package_json, opts) {\n\tvar best_napi_build_version = 0;\n\tvar napi_build_versions = module.exports.get_napi_build_versions (package_json, opts);\n\tif (napi_build_versions) {\n\t\tvar our_napi_version = module.exports.get_napi_version(opts ? opts.target : undefined);\n\t\tnapi_build_versions.forEach(function(napi_build_version){\n\t\t\tif (napi_build_version > best_napi_build_version &&\n\t\t\t\tnapi_build_version <= our_napi_version) {\n\t\t\t\tbest_napi_build_version = napi_build_version;\n\t\t\t}\n\t\t});\n\t}\n\treturn best_napi_build_version === 0 ? undefined : best_napi_build_version;\n};\n\nmodule.exports.build_napi_only = function(package_json) {\n\treturn package_json.binary && package_json.binary.package_name && \n\tpackage_json.binary.package_name.indexOf('{node_napi_label}') === -1;\n};"]},"metadata":{},"sourceType":"script"}